{
  "version": 3,
  "sources": ["https://deno.land/x/silverbullet@0.7.6/lib/plugos/worker_runtime.ts", "https://deno.land/x/silverbullet@0.5.7/plug-api/lib/tree.ts", "https://deno.land/x/silverbullet@0.5.7/plug-api/silverbullet-syscall/editor.ts", "https://deno.land/x/silverbullet@0.5.7/plug-api/silverbullet-syscall/syscall.ts", "https://deno.land/x/silverbullet@0.5.7/plug-api/silverbullet-syscall/markdown.ts", "https://deno.land/x/silverbullet@0.5.7/plug-api/silverbullet-syscall/space.ts", "https://deno.land/x/silverbullet@0.5.7/plug-api/plugos-syscall/syscall.ts", "https://deno.land/x/silverbullet@0.5.7/plug-api/plugos-syscall/yaml.ts", "https://deno.land/x/silverbullet@0.5.7/plug-api/lib/yaml_page.ts", "https://deno.land/x/silverbullet@0.5.7/plug-api/lib/settings_page.ts", "https://deno.land/x/silverbullet@0.5.7/plug-api/lib/secrets_page.ts", "https://deno.land/x/mimetypes@v1.0.0/src/mime.ts", "https://deno.land/std@0.161.0/encoding/base64url.ts", "https://deno.land/std@0.161.0/encoding/base64.ts", "https://deno.land/x/djwt@v2.8/util.ts", "https://deno.land/x/djwt@v2.8/algorithm.ts", "https://deno.land/x/djwt@v2.8/signature.ts", "https://deno.land/x/djwt@v2.8/mod.ts", "ghost_api.ts", "https://deno.land/x/silverbullet@0.5.7/plug-api/lib/frontmatter.ts", "ghost.ts", "efe44d35b4bbeeb7.js"],
  "sourcesContent": ["// This is the runtime imported from the compiled plug worker code\nimport type { ControllerMessage, WorkerMessage } from \"./protocol.ts\";\nimport type {\n  ProxyFetchRequest,\n  ProxyFetchResponse,\n} from \"$common/proxy_fetch.ts\";\n\ndeclare global {\n  function syscall(name: string, ...args: any[]): Promise<any>;\n}\n\n// Are we running in a (web) worker?\n\n// Determines if we're running in a web worker environment (Deno or browser)\n// - in a browser's main threads, typeof window is \"object\"\n// - in a browser's worker threads, typeof window === \"undefined\"\n// - in Deno's main thread typeof window === \"object\"\n// - in Deno's workers typeof window === \"undefined\n// - in Cloudflare workers typeof window === \"undefined\", but typeof globalThis.WebSocketPair is defined\nconst runningAsWebWorker = typeof window === \"undefined\" &&\n  // @ts-ignore: globalThis\n  typeof globalThis.WebSocketPair === \"undefined\";\n\n// console.log(\"Running as web worker:\", runningAsWebWorker);\n\nif (typeof Deno === \"undefined\") {\n  // @ts-ignore: Deno hack\n  self.Deno = {\n    args: [],\n    // @ts-ignore: Deno hack\n    build: {\n      arch: \"x86_64\",\n    },\n    env: {\n      // @ts-ignore: Deno hack\n      get() {\n      },\n    },\n  };\n}\n\nconst pendingRequests = new Map<\n  number,\n  {\n    resolve: (result: unknown) => void;\n    reject: (e: any) => void;\n  }\n>();\n\nlet syscallReqId = 0;\n\nfunction workerPostMessage(msg: ControllerMessage) {\n  self.postMessage(msg);\n}\n\nif (runningAsWebWorker) {\n  globalThis.syscall = async (name: string, ...args: any[]) => {\n    return await new Promise((resolve, reject) => {\n      syscallReqId++;\n      pendingRequests.set(syscallReqId, { resolve, reject });\n      workerPostMessage({\n        type: \"sys\",\n        id: syscallReqId,\n        name,\n        args,\n      });\n    });\n  };\n}\n\nexport function setupMessageListener(\n  // deno-lint-ignore ban-types\n  functionMapping: Record<string, Function>,\n  manifest: any,\n) {\n  if (!runningAsWebWorker) {\n    // Don't do any of this stuff if this is not a web worker\n    // This caters to the NoSandbox run mode\n    return;\n  }\n  self.addEventListener(\"message\", (event: { data: WorkerMessage }) => {\n    (async () => {\n      const data = event.data;\n      switch (data.type) {\n        case \"inv\":\n          {\n            const fn = functionMapping[data.name!];\n            if (!fn) {\n              throw new Error(`Function not loaded: ${data.name}`);\n            }\n            try {\n              const result = await Promise.resolve(fn(...(data.args || [])));\n              workerPostMessage({\n                type: \"invr\",\n                id: data.id,\n                result: result,\n              } as ControllerMessage);\n            } catch (e: any) {\n              console.error(\n                \"An exception was thrown as a result of invoking function\",\n                data.name,\n                \"error:\",\n                e.message,\n              );\n              workerPostMessage({\n                type: \"invr\",\n                id: data.id!,\n                error: e.message,\n              });\n            }\n          }\n          break;\n        case \"sysr\":\n          {\n            const syscallId = data.id;\n            const lookup = pendingRequests.get(syscallId);\n            if (!lookup) {\n              throw Error(\"Invalid request id\");\n            }\n            pendingRequests.delete(syscallId);\n            if (data.error) {\n              lookup.reject(new Error(data.error));\n            } else {\n              lookup.resolve(data.result);\n            }\n          }\n\n          break;\n      }\n    })().catch(console.error);\n  });\n  // Signal initialization with manifest\n  workerPostMessage({\n    type: \"manifest\",\n    manifest,\n  });\n}\n\nexport function base64Decode(s: string): Uint8Array {\n  const binString = atob(s);\n  const len = binString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binString.charCodeAt(i);\n  }\n  return bytes;\n}\n\nexport function base64Encode(buffer: Uint8Array | string): string {\n  if (typeof buffer === \"string\") {\n    buffer = new TextEncoder().encode(buffer);\n  }\n  let binary = \"\";\n  const len = buffer.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(buffer[i]);\n  }\n  return btoa(binary);\n}\n\nexport async function sandboxFetch(\n  reqInfo: RequestInfo,\n  options?: ProxyFetchRequest,\n): Promise<ProxyFetchResponse> {\n  if (typeof reqInfo !== \"string\") {\n    const body = new Uint8Array(await reqInfo.arrayBuffer());\n    const encodedBody = body.length > 0 ? base64Encode(body) : undefined;\n    options = {\n      method: reqInfo.method,\n      headers: Object.fromEntries(reqInfo.headers.entries()),\n      base64Body: encodedBody,\n    };\n    reqInfo = reqInfo.url;\n  }\n  return syscall(\"sandboxFetch.fetch\", reqInfo, options);\n}\n\n// @ts-ignore: monkey patching fetch\nglobalThis.nativeFetch = globalThis.fetch;\n// Monkey patch fetch()\nexport function monkeyPatchFetch() {\n  // @ts-ignore: monkey patching fetch\n  globalThis.fetch = async function (\n    reqInfo: RequestInfo,\n    init?: RequestInit,\n  ): Promise<Response> {\n    const encodedBody = init && init.body\n      ? base64Encode(\n        new Uint8Array(await (new Response(init.body)).arrayBuffer()),\n      )\n      : undefined;\n    const r = await sandboxFetch(\n      reqInfo,\n      init && {\n        method: init.method,\n        headers: init.headers as Record<string, string>,\n        base64Body: encodedBody,\n      },\n    );\n    return new Response(r.base64Body ? base64Decode(r.base64Body) : null, {\n      status: r.status,\n      headers: r.headers,\n    });\n  };\n}\n\nif (runningAsWebWorker) {\n  monkeyPatchFetch();\n}\n", "export type ParseTree = {\n  type?: string; // undefined === text node\n  from?: number;\n  to?: number;\n  text?: string;\n  children?: ParseTree[];\n  // Only present after running addParentPointers\n  parent?: ParseTree;\n};\n\nexport type AST = [string, ...AST[]] | string;\n\nexport function addParentPointers(tree: ParseTree) {\n  if (!tree.children) {\n    return;\n  }\n  for (const child of tree.children) {\n    if (child.parent) {\n      // Already added parent pointers before\n      return;\n    }\n    child.parent = tree;\n    addParentPointers(child);\n  }\n}\n\nexport function removeParentPointers(tree: ParseTree) {\n  delete tree.parent;\n  if (!tree.children) {\n    return;\n  }\n  for (const child of tree.children) {\n    removeParentPointers(child);\n  }\n}\n\nexport function findParentMatching(\n  tree: ParseTree,\n  matchFn: (tree: ParseTree) => boolean,\n): ParseTree | null {\n  let node = tree.parent;\n  while (node) {\n    if (matchFn(node)) {\n      return node;\n    }\n    node = node.parent;\n  }\n  return null;\n}\n\nexport function collectNodesOfType(\n  tree: ParseTree,\n  nodeType: string,\n): ParseTree[] {\n  return collectNodesMatching(tree, (n) => n.type === nodeType);\n}\n\nexport function collectNodesMatching(\n  tree: ParseTree,\n  matchFn: (tree: ParseTree) => boolean,\n): ParseTree[] {\n  if (matchFn(tree)) {\n    return [tree];\n  }\n  let results: ParseTree[] = [];\n  if (tree.children) {\n    for (const child of tree.children) {\n      results = [...results, ...collectNodesMatching(child, matchFn)];\n    }\n  }\n  return results;\n}\n\nexport async function collectNodesMatchingAsync(\n  tree: ParseTree,\n  matchFn: (tree: ParseTree) => Promise<boolean>,\n): Promise<ParseTree[]> {\n  if (await matchFn(tree)) {\n    return [tree];\n  }\n  let results: ParseTree[] = [];\n  if (tree.children) {\n    for (const child of tree.children) {\n      results = [\n        ...results,\n        ...await collectNodesMatchingAsync(child, matchFn),\n      ];\n    }\n  }\n  return results;\n}\n\n// return value: returning undefined = not matched, continue, null = delete, new node = replace\nexport function replaceNodesMatching(\n  tree: ParseTree,\n  substituteFn: (tree: ParseTree) => ParseTree | null | undefined,\n) {\n  if (tree.children) {\n    const children = tree.children.slice();\n    for (const child of children) {\n      const subst = substituteFn(child);\n      if (subst !== undefined) {\n        const pos = tree.children.indexOf(child);\n        if (subst) {\n          tree.children.splice(pos, 1, subst);\n        } else {\n          // null = delete\n          tree.children.splice(pos, 1);\n        }\n      } else {\n        replaceNodesMatching(child, substituteFn);\n      }\n    }\n  }\n}\n\nexport async function replaceNodesMatchingAsync(\n  tree: ParseTree,\n  substituteFn: (tree: ParseTree) => Promise<ParseTree | null | undefined>,\n) {\n  if (tree.children) {\n    const children = tree.children.slice();\n    for (const child of children) {\n      const subst = await substituteFn(child);\n      if (subst !== undefined) {\n        const pos = tree.children.indexOf(child);\n        if (subst) {\n          tree.children.splice(pos, 1, subst);\n        } else {\n          // null = delete\n          tree.children.splice(pos, 1);\n        }\n      } else {\n        await replaceNodesMatchingAsync(child, substituteFn);\n      }\n    }\n  }\n}\n\nexport function findNodeMatching(\n  tree: ParseTree,\n  matchFn: (tree: ParseTree) => boolean,\n): ParseTree | null {\n  return collectNodesMatching(tree, matchFn)[0];\n}\n\nexport function findNodeOfType(\n  tree: ParseTree,\n  nodeType: string,\n): ParseTree | null {\n  return collectNodesMatching(tree, (n) => n.type === nodeType)[0];\n}\n\nexport function traverseTree(\n  tree: ParseTree,\n  // Return value = should stop traversal?\n  matchFn: (tree: ParseTree) => boolean,\n): void {\n  // Do a collect, but ignore the result\n  collectNodesMatching(tree, matchFn);\n}\n\nexport async function traverseTreeAsync(\n  tree: ParseTree,\n  // Return value = should stop traversal?\n  matchFn: (tree: ParseTree) => Promise<boolean>,\n): Promise<void> {\n  // Do a collect, but ignore the result\n  await collectNodesMatchingAsync(tree, matchFn);\n}\n\n// Finds non-text node at position\nexport function nodeAtPos(tree: ParseTree, pos: number): ParseTree | null {\n  if (pos < tree.from! || pos >= tree.to!) {\n    return null;\n  }\n  if (!tree.children) {\n    return tree;\n  }\n  for (const child of tree.children) {\n    const n = nodeAtPos(child, pos);\n    if (n && n.text !== undefined) {\n      // Got a text node, let's return its parent\n      return tree;\n    } else if (n) {\n      // Got it\n      return n;\n    }\n  }\n  return null;\n}\n\n// Turn ParseTree back into text\nexport function renderToText(tree: ParseTree): string {\n  const pieces: string[] = [];\n  if (tree.text !== undefined) {\n    return tree.text;\n  }\n  for (const child of tree.children!) {\n    pieces.push(renderToText(child));\n  }\n  return pieces.join(\"\");\n}\n\nexport function cloneTree(tree: ParseTree): ParseTree {\n  const newTree = { ...tree };\n  if (tree.children) {\n    newTree.children = tree.children.map(cloneTree);\n  }\n  delete newTree.parent;\n  return newTree;\n}\n\nexport function parseTreeToAST(tree: ParseTree): AST {\n  if (tree.text !== undefined) {\n    return tree.text;\n  }\n  const ast: AST = [tree.type!];\n  for (const node of tree.children!) {\n    if (node.type && !node.type.endsWith(\"Mark\")) {\n      ast.push(parseTreeToAST(node));\n    }\n    if (node.text && node.text.trim()) {\n      ast.push(node.text);\n    }\n  }\n  return ast;\n}\n", "import type { FilterOption } from \"../../web/types.ts\";\nimport { UploadFile } from \"../types.ts\";\nimport { syscall } from \"./syscall.ts\";\n\nexport function getCurrentPage(): Promise<string> {\n  return syscall(\"editor.getCurrentPage\");\n}\n\nexport function setPage(newName: string): Promise<void> {\n  return syscall(\"editor.setPage\", newName);\n}\n\nexport function getText(): Promise<string> {\n  return syscall(\"editor.getText\");\n}\n\nexport function getCursor(): Promise<number> {\n  return syscall(\"editor.getCursor\");\n}\n\nexport function getSelection(): Promise<{ from: number; to: number }> {\n  return syscall(\"editor.getSelection\");\n}\n\nexport function setSelection(from: number, to: number): Promise<void> {\n  return syscall(\"editor.setSelection\", from, to);\n}\n\nexport function save(): Promise<void> {\n  return syscall(\"editor.save\");\n}\n\nexport function navigate(\n  name: string,\n  pos?: string | number,\n  replaceState = false,\n  newWindow = false,\n): Promise<void> {\n  return syscall(\"editor.navigate\", name, pos, replaceState, newWindow);\n}\n\nexport function reloadPage(): Promise<void> {\n  return syscall(\"editor.reloadPage\");\n}\n\nexport function reloadUI(): Promise<void> {\n  return syscall(\"editor.reloadUI\");\n}\n\nexport function openUrl(url: string, existingWindow = false): Promise<void> {\n  return syscall(\"editor.openUrl\", url, existingWindow);\n}\n\n// Force the client to download the file in dataUrl with filename as file name\nexport function downloadFile(filename: string, dataUrl: string): Promise<void> {\n  return syscall(\"editor.downloadFile\", filename, dataUrl);\n}\n\nexport function uploadFile(\n  accept?: string,\n  capture?: string,\n): Promise<UploadFile> {\n  return syscall(\"editor.uploadFile\", accept, capture);\n}\n\nexport function flashNotification(\n  message: string,\n  type: \"info\" | \"error\" = \"info\",\n): Promise<void> {\n  return syscall(\"editor.flashNotification\", message, type);\n}\n\nexport function filterBox(\n  label: string,\n  options: FilterOption[],\n  helpText = \"\",\n  placeHolder = \"\",\n): Promise<FilterOption | undefined> {\n  return syscall(\"editor.filterBox\", label, options, helpText, placeHolder);\n}\n\nexport function showPanel(\n  id: \"lhs\" | \"rhs\" | \"bhs\" | \"modal\" | \"bottom\" | \"top\",\n  mode: number,\n  html: string,\n  script = \"\",\n): Promise<void> {\n  return syscall(\"editor.showPanel\", id, mode, html, script);\n}\n\nexport function hidePanel(\n  id: \"lhs\" | \"rhs\" | \"bhs\" | \"modal\" | \"bottom\" | \"top\",\n): Promise<void> {\n  return syscall(\"editor.hidePanel\", id);\n}\n\nexport function insertAtPos(text: string, pos: number): Promise<void> {\n  return syscall(\"editor.insertAtPos\", text, pos);\n}\n\nexport function replaceRange(\n  from: number,\n  to: number,\n  text: string,\n): Promise<void> {\n  return syscall(\"editor.replaceRange\", from, to, text);\n}\n\nexport function moveCursor(pos: number, center = false): Promise<void> {\n  return syscall(\"editor.moveCursor\", pos, center);\n}\n\nexport function insertAtCursor(text: string): Promise<void> {\n  return syscall(\"editor.insertAtCursor\", text);\n}\n\nexport function dispatch(change: any): Promise<void> {\n  return syscall(\"editor.dispatch\", change);\n}\n\nexport function prompt(\n  message: string,\n  defaultValue = \"\",\n): Promise<string | undefined> {\n  return syscall(\"editor.prompt\", message, defaultValue);\n}\n\nexport function confirm(\n  message: string,\n): Promise<boolean> {\n  return syscall(\"editor.confirm\", message);\n}\nexport function getUiOption(key: string): Promise<any> {\n  return syscall(\"editor.getUiOption\", key);\n}\n\nexport function setUiOption(key: string, value: any): Promise<void> {\n  return syscall(\"editor.setUiOption\", key, value);\n}\n\n// Vim specific\nexport function vimEx(exCommand: string): Promise<any> {\n  return syscall(\"editor.vimEx\", exCommand);\n}\n\n// Folding\n\nexport function fold() {\n  return syscall(\"editor.fold\");\n}\n\nexport function unfold() {\n  return syscall(\"editor.unfold\");\n}\n\nexport function toggleFold() {\n  return syscall(\"editor.toggleFold\");\n}\n\nexport function foldAll() {\n  return syscall(\"editor.foldAll\");\n}\n\nexport function unfoldAll() {\n  return syscall(\"editor.unfoldAll\");\n}\n", "declare global {\n  function syscall(name: string, ...args: any[]): Promise<any>;\n}\n\n// This is the case when running tests only, so giving it a dummy syscall function\nif (typeof self === \"undefined\") {\n  // @ts-ignore: test\n  // deno-lint-ignore no-global-assign\n  self = {\n    syscall: () => {\n      throw new Error(\"Not implemented here\");\n    },\n  };\n}\n\nexport const syscall = self.syscall;\n", "import { syscall } from \"$sb/silverbullet-syscall/syscall.ts\";\n\nimport type { ParseTree } from \"$sb/lib/tree.ts\";\n\nexport function parseMarkdown(text: string): Promise<ParseTree> {\n  return syscall(\"markdown.parseMarkdown\", text);\n}\n", "import { syscall } from \"./syscall.ts\";\nimport { AttachmentMeta, FileMeta, PageMeta } from \"$sb/types.ts\";\n\nexport function listPages(unfiltered = false): Promise<PageMeta[]> {\n  return syscall(\"space.listPages\", unfiltered);\n}\n\nexport function getPageMeta(name: string): Promise<PageMeta> {\n  return syscall(\"space.getPageMeta\", name);\n}\n\nexport function readPage(\n  name: string,\n): Promise<string> {\n  return syscall(\"space.readPage\", name);\n}\n\nexport function writePage(name: string, text: string): Promise<PageMeta> {\n  return syscall(\"space.writePage\", name, text);\n}\n\nexport function deletePage(name: string): Promise<void> {\n  return syscall(\"space.deletePage\", name);\n}\n\nexport function listPlugs(): Promise<string[]> {\n  return syscall(\"space.listPlugs\");\n}\n\nexport function listAttachments(): Promise<AttachmentMeta[]> {\n  return syscall(\"space.listAttachments\");\n}\n\nexport function getAttachmentMeta(name: string): Promise<AttachmentMeta> {\n  return syscall(\"space.getAttachmentMeta\", name);\n}\n\n/**\n * Read an attachment from the space\n * @param name path of the attachment to read\n * @returns the attachment data encoded as a data URL\n */\nexport function readAttachment(\n  name: string,\n): Promise<Uint8Array> {\n  return syscall(\"space.readAttachment\", name);\n}\n\n/**\n * Writes an attachment to the space\n * @param name path of the attachment to write\n * @param data data itself\n * @returns\n */\nexport function writeAttachment(\n  name: string,\n  data: Uint8Array,\n): Promise<AttachmentMeta> {\n  return syscall(\"space.writeAttachment\", name, data);\n}\n\n/**\n * Deletes an attachment from the space\n * @param name path of the attachment to delete\n */\nexport function deleteAttachment(name: string): Promise<void> {\n  return syscall(\"space.deleteAttachment\", name);\n}\n\n// FS\nexport function listFiles(): Promise<FileMeta[]> {\n  return syscall(\"space.listFiles\");\n}\n\nexport function readFile(name: string): Promise<Uint8Array> {\n  return syscall(\"space.readFile\", name);\n}\n\nexport function getFileMeta(name: string): Promise<FileMeta> {\n  return syscall(\"space.getFileMeta\", name);\n}\n\nexport function writeFile(\n  name: string,\n  data: Uint8Array,\n): Promise<FileMeta> {\n  return syscall(\"space.writeFile\", name, data);\n}\n\nexport function deleteFile(name: string): Promise<void> {\n  return syscall(\"space.deleteFile\", name);\n}\n", "declare global {\n  function syscall(name: string, ...args: any[]): Promise<any>;\n}\n\nexport const syscall = globalThis.syscall;\n", "import { syscall } from \"./syscall.ts\";\n\nexport function parse(\n  text: string,\n): Promise<any> {\n  return syscall(\"yaml.parse\", text);\n}\n\nexport function stringify(\n  obj: any,\n): Promise<string> {\n  return syscall(\"yaml.stringify\", obj);\n}\n", "import { findNodeOfType, traverseTree } from \"$sb/lib/tree.ts\";\nimport { markdown, space } from \"$sb/silverbullet-syscall/mod.ts\";\nimport { YAML } from \"$sb/plugos-syscall/mod.ts\";\n\nexport async function readCodeBlockPage(\n  pageName: string,\n  allowedLanguages?: string[],\n): Promise<string | undefined> {\n  const text = await space.readPage(pageName);\n  const tree = await markdown.parseMarkdown(text);\n  let codeText: string | undefined;\n\n  traverseTree(tree, (t): boolean => {\n    // Find a fenced code block\n    if (t.type !== \"FencedCode\") {\n      return false;\n    }\n    const codeInfoNode = findNodeOfType(t, \"CodeInfo\");\n    if (allowedLanguages && !codeInfoNode) {\n      return false;\n    }\n    if (\n      allowedLanguages &&\n      !allowedLanguages.includes(codeInfoNode!.children![0].text!)\n    ) {\n      return false;\n    }\n    const codeTextNode = findNodeOfType(t, \"CodeText\");\n    if (!codeTextNode) {\n      // Honestly, this shouldn't happen\n      return false;\n    }\n    codeText = codeTextNode.children![0].text!;\n    return true;\n  });\n\n  return codeText;\n}\n\nexport async function readYamlPage(\n  pageName: string,\n  allowedLanguages = [\"yaml\"],\n): Promise<any> {\n  const codeText = await readCodeBlockPage(pageName, allowedLanguages);\n  if (codeText === undefined) {\n    return undefined;\n  }\n  try {\n    return YAML.parse(codeText);\n  } catch (e: any) {\n    console.error(\"YAML Page parser error\", e);\n    throw new Error(`YAML Error: ${e.message}`);\n  }\n}\n\nexport async function writeYamlPage(\n  pageName: string,\n  data: any,\n  prelude = \"\",\n): Promise<void> {\n  const text = await YAML.stringify(data);\n  await space.writePage(pageName, prelude + \"```yaml\\n\" + text + \"\\n```\");\n}\n", "import { readYamlPage } from \"$sb/lib/yaml_page.ts\";\nimport { YAML } from \"$sb/plugos-syscall/mod.ts\";\n\nimport { editor, space } from \"$sb/silverbullet-syscall/mod.ts\";\n\n/**\n * Convenience function to read a specific set of settings from the `SETTINGS` page as well as default values\n * in case they are not specified.\n * Example: `await readSettings({showPreview: false})` will return an object like `{showPreview: false}` (or `true`)\n * in case this setting is specifically set in the `SETTINGS` page.\n *\n * @param settings object with settings to fetch and their default values\n * @returns an object with the same shape as `settings` but with non-default values override based on `SETTINGS`\n */\n\nconst SETTINGS_PAGE = \"SETTINGS\";\n\nexport async function readSettings<T extends object>(settings: T): Promise<T> {\n  try {\n    const allSettings = (await readYamlPage(SETTINGS_PAGE, [\"yaml\"])) || {};\n    // TODO: I'm sure there's a better way to type this than \"any\"\n    const collectedSettings: any = {};\n    for (const [key, defaultVal] of Object.entries(settings)) {\n      if (key in allSettings) {\n        collectedSettings[key] = allSettings[key];\n      } else {\n        collectedSettings[key] = defaultVal;\n      }\n    }\n    return collectedSettings as T;\n  } catch (e: any) {\n    if (e.message === \"Not found\") {\n      // No settings yet, return default values for all\n      return settings;\n    }\n    throw e;\n  }\n}\n\nexport async function readSetting(\n  key: string,\n  defaultValue?: any,\n): Promise<any> {\n  try {\n    const allSettings = (await readYamlPage(SETTINGS_PAGE, [\"yaml\"])) || {};\n    const val = allSettings[key];\n    return val === undefined ? defaultValue : val;\n  } catch (e: any) {\n    if (e.message === \"Not found\") {\n      // No settings yet, return default values for all\n      return defaultValue;\n    }\n    throw e;\n  }\n}\n\n/**\n * Convenience function to write a specific set of settings from the `SETTINGS` page.\n * If the SETTiNGS page doesn't exist it will create it.\n * @param settings\n */\nexport async function writeSettings<T extends object>(settings: T) {\n  let readSettings = {};\n  try {\n    readSettings = (await readYamlPage(SETTINGS_PAGE, [\"yaml\"])) || {};\n  } catch {\n    await editor.flashNotification(\"Creating a new SETTINGS page...\", \"info\");\n  }\n  const writeSettings: any = { ...readSettings, ...settings };\n  // const doc = new YAML.Document();\n  // doc.contents = writeSettings;\n  const contents =\n    `This page contains settings for configuring SilverBullet and its Plugs.\\nAny changes outside of the yaml block will be overwritten.\\n\\`\\`\\`yaml\\n${await YAML\n      .stringify(\n        writeSettings,\n      )}\\n\\`\\`\\``; // might need \\r\\n for windows?\n  await space.writePage(SETTINGS_PAGE, contents);\n}\n", "import { readYamlPage } from \"./yaml_page.ts\";\n\n// Read SECRETS page and retrieve specific set of secret keys\n// Note: in this implementation there's no encryption employed at all so it's just a matter\n// of not decising this SECRETS page to other places\nexport async function readSecrets(keys: string[]): Promise<any[]> {\n  try {\n    const allSecrets = await readYamlPage(\"SECRETS\", [\"yaml\", \"secrets\"]);\n    const collectedSecrets: any[] = [];\n    for (const key of keys) {\n      const secret = allSecrets[key];\n      if (secret) {\n        collectedSecrets.push(secret);\n      } else {\n        throw new Error(`No such secret: ${key}`);\n      }\n    }\n    return collectedSecrets;\n  } catch (e: any) {\n    if (e.message === \"Not found\") {\n      throw new Error(`No such secret: ${keys[0]}`);\n    }\n    throw e;\n  }\n}\n\n// Read SECRETS page and retrieve a specific secret\nexport async function readSecret(key: string): Promise<any> {\n  try {\n    const allSecrets = await readYamlPage(\"SECRETS\", [\"yaml\", \"secrets\"]);\n    const val = allSecrets[key];\n    if (val === undefined) {\n      throw new Error(`No such secret: ${key}`);\n    }\n    return val;\n  } catch (e: any) {\n    if (e.message === \"Not found\") {\n      throw new Error(`No such secret: ${key}`);\n    }\n    throw e;\n  }\n}\n", "const other : MimeTypeMap = {\"audio/x-opus\": [\"opus\"], \"application/prs.cww\":[\"cww\"],\"application/vnd.1000minds.decision-model+xml\":[\"1km\"],\"application/vnd.3gpp.pic-bw-large\":[\"plb\"],\"application/vnd.3gpp.pic-bw-small\":[\"psb\"],\"application/vnd.3gpp.pic-bw-var\":[\"pvb\"],\"application/vnd.3gpp2.tcap\":[\"tcap\"],\"application/vnd.3m.post-it-notes\":[\"pwn\"],\"application/vnd.accpac.simply.aso\":[\"aso\"],\"application/vnd.accpac.simply.imp\":[\"imp\"],\"application/vnd.acucobol\":[\"acu\"],\"application/vnd.acucorp\":[\"atc\",\"acutc\"],\"application/vnd.adobe.air-application-installer-package+zip\":[\"air\"],\"application/vnd.adobe.formscentral.fcdt\":[\"fcdt\"],\"application/vnd.adobe.fxp\":[\"fxp\",\"fxpl\"],\"application/vnd.adobe.xdp+xml\":[\"xdp\"],\"application/vnd.adobe.xfdf\":[\"xfdf\"],\"application/vnd.ahead.space\":[\"ahead\"],\"application/vnd.airzip.filesecure.azf\":[\"azf\"],\"application/vnd.airzip.filesecure.azs\":[\"azs\"],\"application/vnd.amazon.ebook\":[\"azw\"],\"application/vnd.americandynamics.acc\":[\"acc\"],\"application/vnd.amiga.ami\":[\"ami\"],\"application/vnd.android.package-archive\":[\"apk\"],\"application/vnd.anser-web-certificate-issue-initiation\":[\"cii\"],\"application/vnd.anser-web-funds-transfer-initiation\":[\"fti\"],\"application/vnd.antix.game-component\":[\"atx\"],\"application/vnd.apple.installer+xml\":[\"mpkg\"],\"application/vnd.apple.keynote\":[\"key\"],\"application/vnd.apple.mpegurl\":[\"m3u8\"],\"application/vnd.apple.numbers\":[\"numbers\"],\"application/vnd.apple.pages\":[\"pages\"],\"application/vnd.apple.pkpass\":[\"pkpass\"],\"application/vnd.aristanetworks.swi\":[\"swi\"],\"application/vnd.astraea-software.iota\":[\"iota\"],\"application/vnd.audiograph\":[\"aep\"],\"application/vnd.balsamiq.bmml+xml\":[\"bmml\"],\"application/vnd.blueice.multipass\":[\"mpm\"],\"application/vnd.bmi\":[\"bmi\"],\"application/vnd.businessobjects\":[\"rep\"],\"application/vnd.chemdraw+xml\":[\"cdxml\"],\"application/vnd.chipnuts.karaoke-mmd\":[\"mmd\"],\"application/vnd.cinderella\":[\"cdy\"],\"application/vnd.citationstyles.style+xml\":[\"csl\"],\"application/vnd.claymore\":[\"cla\"],\"application/vnd.cloanto.rp9\":[\"rp9\"],\"application/vnd.clonk.c4group\":[\"c4g\",\"c4d\",\"c4f\",\"c4p\",\"c4u\"],\"application/vnd.cluetrust.cartomobile-config\":[\"c11amc\"],\"application/vnd.cluetrust.cartomobile-config-pkg\":[\"c11amz\"],\"application/vnd.commonspace\":[\"csp\"],\"application/vnd.contact.cmsg\":[\"cdbcmsg\"],\"application/vnd.cosmocaller\":[\"cmc\"],\"application/vnd.crick.clicker\":[\"clkx\"],\"application/vnd.crick.clicker.keyboard\":[\"clkk\"],\"application/vnd.crick.clicker.palette\":[\"clkp\"],\"application/vnd.crick.clicker.template\":[\"clkt\"],\"application/vnd.crick.clicker.wordbank\":[\"clkw\"],\"application/vnd.criticaltools.wbs+xml\":[\"wbs\"],\"application/vnd.ctc-posml\":[\"pml\"],\"application/vnd.cups-ppd\":[\"ppd\"],\"application/vnd.curl.car\":[\"car\"],\"application/vnd.curl.pcurl\":[\"pcurl\"],\"application/vnd.dart\":[\"dart\"],\"application/vnd.data-vision.rdz\":[\"rdz\"],\"application/vnd.dbf\":[\"dbf\"],\"application/vnd.dece.data\":[\"uvf\",\"uvvf\",\"uvd\",\"uvvd\"],\"application/vnd.dece.ttml+xml\":[\"uvt\",\"uvvt\"],\"application/vnd.dece.unspecified\":[\"uvx\",\"uvvx\"],\"application/vnd.dece.zip\":[\"uvz\",\"uvvz\"],\"application/vnd.denovo.fcselayout-link\":[\"fe_launch\"],\"application/vnd.dna\":[\"dna\"],\"application/vnd.dolby.mlp\":[\"mlp\"],\"application/vnd.dpgraph\":[\"dpg\"],\"application/vnd.dreamfactory\":[\"dfac\"],\"application/vnd.ds-keypoint\":[\"kpxx\"],\"application/vnd.dvb.ait\":[\"ait\"],\"application/vnd.dvb.service\":[\"svc\"],\"application/vnd.dynageo\":[\"geo\"],\"application/vnd.ecowin.chart\":[\"mag\"],\"application/vnd.enliven\":[\"nml\"],\"application/vnd.epson.esf\":[\"esf\"],\"application/vnd.epson.msf\":[\"msf\"],\"application/vnd.epson.quickanime\":[\"qam\"],\"application/vnd.epson.salt\":[\"slt\"],\"application/vnd.epson.ssf\":[\"ssf\"],\"application/vnd.eszigno3+xml\":[\"es3\",\"et3\"],\"application/vnd.ezpix-album\":[\"ez2\"],\"application/vnd.ezpix-package\":[\"ez3\"],\"application/vnd.fdf\":[\"fdf\"],\"application/vnd.fdsn.mseed\":[\"mseed\"],\"application/vnd.fdsn.seed\":[\"seed\",\"dataless\"],\"application/vnd.flographit\":[\"gph\"],\"application/vnd.fluxtime.clip\":[\"ftc\"],\"application/vnd.framemaker\":[\"fm\",\"frame\",\"maker\",\"book\"],\"application/vnd.frogans.fnc\":[\"fnc\"],\"application/vnd.frogans.ltf\":[\"ltf\"],\"application/vnd.fsc.weblaunch\":[\"fsc\"],\"application/vnd.fujitsu.oasys\":[\"oas\"],\"application/vnd.fujitsu.oasys2\":[\"oa2\"],\"application/vnd.fujitsu.oasys3\":[\"oa3\"],\"application/vnd.fujitsu.oasysgp\":[\"fg5\"],\"application/vnd.fujitsu.oasysprs\":[\"bh2\"],\"application/vnd.fujixerox.ddd\":[\"ddd\"],\"application/vnd.fujixerox.docuworks\":[\"xdw\"],\"application/vnd.fujixerox.docuworks.binder\":[\"xbd\"],\"application/vnd.fuzzysheet\":[\"fzs\"],\"application/vnd.genomatix.tuxedo\":[\"txd\"],\"application/vnd.geogebra.file\":[\"ggb\"],\"application/vnd.geogebra.tool\":[\"ggt\"],\"application/vnd.geometry-explorer\":[\"gex\",\"gre\"],\"application/vnd.geonext\":[\"gxt\"],\"application/vnd.geoplan\":[\"g2w\"],\"application/vnd.geospace\":[\"g3w\"],\"application/vnd.gmx\":[\"gmx\"],\"application/vnd.google-apps.document\":[\"gdoc\"],\"application/vnd.google-apps.presentation\":[\"gslides\"],\"application/vnd.google-apps.spreadsheet\":[\"gsheet\"],\"application/vnd.google-earth.kml+xml\":[\"kml\"],\"application/vnd.google-earth.kmz\":[\"kmz\"],\"application/vnd.grafeq\":[\"gqf\",\"gqs\"],\"application/vnd.groove-account\":[\"gac\"],\"application/vnd.groove-help\":[\"ghf\"],\"application/vnd.groove-identity-message\":[\"gim\"],\"application/vnd.groove-injector\":[\"grv\"],\"application/vnd.groove-tool-message\":[\"gtm\"],\"application/vnd.groove-tool-template\":[\"tpl\"],\"application/vnd.groove-vcard\":[\"vcg\"],\"application/vnd.hal+xml\":[\"hal\"],\"application/vnd.handheld-entertainment+xml\":[\"zmm\"],\"application/vnd.hbci\":[\"hbci\"],\"application/vnd.hhe.lesson-player\":[\"les\"],\"application/vnd.hp-hpgl\":[\"hpgl\"],\"application/vnd.hp-hpid\":[\"hpid\"],\"application/vnd.hp-hps\":[\"hps\"],\"application/vnd.hp-jlyt\":[\"jlt\"],\"application/vnd.hp-pcl\":[\"pcl\"],\"application/vnd.hp-pclxl\":[\"pclxl\"],\"application/vnd.hydrostatix.sof-data\":[\"sfd-hdstx\"],\"application/vnd.ibm.minipay\":[\"mpy\"],\"application/vnd.ibm.modcap\":[\"afp\",\"listafp\",\"list3820\"],\"application/vnd.ibm.rights-management\":[\"irm\"],\"application/vnd.ibm.secure-container\":[\"sc\"],\"application/vnd.iccprofile\":[\"icc\",\"icm\"],\"application/vnd.igloader\":[\"igl\"],\"application/vnd.immervision-ivp\":[\"ivp\"],\"application/vnd.immervision-ivu\":[\"ivu\"],\"application/vnd.insors.igm\":[\"igm\"],\"application/vnd.intercon.formnet\":[\"xpw\",\"xpx\"],\"application/vnd.intergeo\":[\"i2g\"],\"application/vnd.intu.qbo\":[\"qbo\"],\"application/vnd.intu.qfx\":[\"qfx\"],\"application/vnd.ipunplugged.rcprofile\":[\"rcprofile\"],\"application/vnd.irepository.package+xml\":[\"irp\"],\"application/vnd.is-xpr\":[\"xpr\"],\"application/vnd.isac.fcs\":[\"fcs\"],\"application/vnd.jam\":[\"jam\"],\"application/vnd.jcp.javame.midlet-rms\":[\"rms\"],\"application/vnd.jisp\":[\"jisp\"],\"application/vnd.joost.joda-archive\":[\"joda\"],\"application/vnd.kahootz\":[\"ktz\",\"ktr\"],\"application/vnd.kde.karbon\":[\"karbon\"],\"application/vnd.kde.kchart\":[\"chrt\"],\"application/vnd.kde.kformula\":[\"kfo\"],\"application/vnd.kde.kivio\":[\"flw\"],\"application/vnd.kde.kontour\":[\"kon\"],\"application/vnd.kde.kpresenter\":[\"kpr\",\"kpt\"],\"application/vnd.kde.kspread\":[\"ksp\"],\"application/vnd.kde.kword\":[\"kwd\",\"kwt\"],\"application/vnd.kenameaapp\":[\"htke\"],\"application/vnd.kidspiration\":[\"kia\"],\"application/vnd.kinar\":[\"kne\",\"knp\"],\"application/vnd.koan\":[\"skp\",\"skd\",\"skt\",\"skm\"],\"application/vnd.kodak-descriptor\":[\"sse\"],\"application/vnd.las.las+xml\":[\"lasxml\"],\"application/vnd.llamagraphics.life-balance.desktop\":[\"lbd\"],\"application/vnd.llamagraphics.life-balance.exchange+xml\":[\"lbe\"],\"application/vnd.lotus-1-2-3\":[\"123\"],\"application/vnd.lotus-approach\":[\"apr\"],\"application/vnd.lotus-freelance\":[\"pre\"],\"application/vnd.lotus-notes\":[\"nsf\"],\"application/vnd.lotus-organizer\":[\"org\"],\"application/vnd.lotus-screencam\":[\"scm\"],\"application/vnd.lotus-wordpro\":[\"lwp\"],\"application/vnd.macports.portpkg\":[\"portpkg\"],\"application/vnd.mcd\":[\"mcd\"],\"application/vnd.medcalcdata\":[\"mc1\"],\"application/vnd.mediastation.cdkey\":[\"cdkey\"],\"application/vnd.mfer\":[\"mwf\"],\"application/vnd.mfmp\":[\"mfm\"],\"application/vnd.micrografx.flo\":[\"flo\"],\"application/vnd.micrografx.igx\":[\"igx\"],\"application/vnd.mif\":[\"mif\"],\"application/vnd.mobius.daf\":[\"daf\"],\"application/vnd.mobius.dis\":[\"dis\"],\"application/vnd.mobius.mbk\":[\"mbk\"],\"application/vnd.mobius.mqy\":[\"mqy\"],\"application/vnd.mobius.msl\":[\"msl\"],\"application/vnd.mobius.plc\":[\"plc\"],\"application/vnd.mobius.txf\":[\"txf\"],\"application/vnd.mophun.application\":[\"mpn\"],\"application/vnd.mophun.certificate\":[\"mpc\"],\"application/vnd.mozilla.xul+xml\":[\"xul\"],\"application/vnd.ms-artgalry\":[\"cil\"],\"application/vnd.ms-cab-compressed\":[\"cab\"],\"application/vnd.ms-excel\":[\"xls\",\"xlm\",\"xla\",\"xlc\",\"xlt\",\"xlw\"],\"application/vnd.ms-excel.addin.macroenabled.12\":[\"xlam\"],\"application/vnd.ms-excel.sheet.binary.macroenabled.12\":[\"xlsb\"],\"application/vnd.ms-excel.sheet.macroenabled.12\":[\"xlsm\"],\"application/vnd.ms-excel.template.macroenabled.12\":[\"xltm\"],\"application/vnd.ms-fontobject\":[\"eot\"],\"application/vnd.ms-htmlhelp\":[\"chm\"],\"application/vnd.ms-ims\":[\"ims\"],\"application/vnd.ms-lrm\":[\"lrm\"],\"application/vnd.ms-officetheme\":[\"thmx\"],\"application/vnd.ms-outlook\":[\"msg\"],\"application/vnd.ms-pki.seccat\":[\"cat\"],\"application/vnd.ms-pki.stl\":[\"*stl\"],\"application/vnd.ms-powerpoint\":[\"ppt\",\"pps\",\"pot\"],\"application/vnd.ms-powerpoint.addin.macroenabled.12\":[\"ppam\"],\"application/vnd.ms-powerpoint.presentation.macroenabled.12\":[\"pptm\"],\"application/vnd.ms-powerpoint.slide.macroenabled.12\":[\"sldm\"],\"application/vnd.ms-powerpoint.slideshow.macroenabled.12\":[\"ppsm\"],\"application/vnd.ms-powerpoint.template.macroenabled.12\":[\"potm\"],\"application/vnd.ms-project\":[\"mpp\",\"mpt\"],\"application/vnd.ms-word.document.macroenabled.12\":[\"docm\"],\"application/vnd.ms-word.template.macroenabled.12\":[\"dotm\"],\"application/vnd.ms-works\":[\"wps\",\"wks\",\"wcm\",\"wdb\"],\"application/vnd.ms-wpl\":[\"wpl\"],\"application/vnd.ms-xpsdocument\":[\"xps\"],\"application/vnd.mseq\":[\"mseq\"],\"application/vnd.musician\":[\"mus\"],\"application/vnd.muvee.style\":[\"msty\"],\"application/vnd.mynfc\":[\"taglet\"],\"application/vnd.neurolanguage.nlu\":[\"nlu\"],\"application/vnd.nitf\":[\"ntf\",\"nitf\"],\"application/vnd.noblenet-directory\":[\"nnd\"],\"application/vnd.noblenet-sealer\":[\"nns\"],\"application/vnd.noblenet-web\":[\"nnw\"],\"application/vnd.nokia.n-gage.ac+xml\":[\"*ac\"],\"application/vnd.nokia.n-gage.data\":[\"ngdat\"],\"application/vnd.nokia.n-gage.symbian.install\":[\"n-gage\"],\"application/vnd.nokia.radio-preset\":[\"rpst\"],\"application/vnd.nokia.radio-presets\":[\"rpss\"],\"application/vnd.novadigm.edm\":[\"edm\"],\"application/vnd.novadigm.edx\":[\"edx\"],\"application/vnd.novadigm.ext\":[\"ext\"],\"application/vnd.oasis.opendocument.chart\":[\"odc\"],\"application/vnd.oasis.opendocument.chart-template\":[\"otc\"],\"application/vnd.oasis.opendocument.database\":[\"odb\"],\"application/vnd.oasis.opendocument.formula\":[\"odf\"],\"application/vnd.oasis.opendocument.formula-template\":[\"odft\"],\"application/vnd.oasis.opendocument.graphics\":[\"odg\"],\"application/vnd.oasis.opendocument.graphics-template\":[\"otg\"],\"application/vnd.oasis.opendocument.image\":[\"odi\"],\"application/vnd.oasis.opendocument.image-template\":[\"oti\"],\"application/vnd.oasis.opendocument.presentation\":[\"odp\"],\"application/vnd.oasis.opendocument.presentation-template\":[\"otp\"],\"application/vnd.oasis.opendocument.spreadsheet\":[\"ods\"],\"application/vnd.oasis.opendocument.spreadsheet-template\":[\"ots\"],\"application/vnd.oasis.opendocument.text\":[\"odt\"],\"application/vnd.oasis.opendocument.text-master\":[\"odm\"],\"application/vnd.oasis.opendocument.text-template\":[\"ott\"],\"application/vnd.oasis.opendocument.text-web\":[\"oth\"],\"application/vnd.olpc-sugar\":[\"xo\"],\"application/vnd.oma.dd2+xml\":[\"dd2\"],\"application/vnd.openblox.game+xml\":[\"obgx\"],\"application/vnd.openofficeorg.extension\":[\"oxt\"],\"application/vnd.openstreetmap.data+xml\":[\"osm\"],\"application/vnd.openxmlformats-officedocument.presentationml.presentation\":[\"pptx\"],\"application/vnd.openxmlformats-officedocument.presentationml.slide\":[\"sldx\"],\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\":[\"ppsx\"],\"application/vnd.openxmlformats-officedocument.presentationml.template\":[\"potx\"],\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":[\"xlsx\"],\"application/vnd.openxmlformats-officedocument.spreadsheetml.template\":[\"xltx\"],\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":[\"docx\"],\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\":[\"dotx\"],\"application/vnd.osgeo.mapguide.package\":[\"mgp\"],\"application/vnd.osgi.dp\":[\"dp\"],\"application/vnd.osgi.subsystem\":[\"esa\"],\"application/vnd.palm\":[\"pdb\",\"pqa\",\"oprc\"],\"application/vnd.pawaafile\":[\"paw\"],\"application/vnd.pg.format\":[\"str\"],\"application/vnd.pg.osasli\":[\"ei6\"],\"application/vnd.picsel\":[\"efif\"],\"application/vnd.pmi.widget\":[\"wg\"],\"application/vnd.pocketlearn\":[\"plf\"],\"application/vnd.powerbuilder6\":[\"pbd\"],\"application/vnd.previewsystems.box\":[\"box\"],\"application/vnd.proteus.magazine\":[\"mgz\"],\"application/vnd.publishare-delta-tree\":[\"qps\"],\"application/vnd.pvi.ptid1\":[\"ptid\"],\"application/vnd.quark.quarkxpress\":[\"qxd\",\"qxt\",\"qwd\",\"qwt\",\"qxl\",\"qxb\"],\"application/vnd.rar\":[\"rar\"],\"application/vnd.realvnc.bed\":[\"bed\"],\"application/vnd.recordare.musicxml\":[\"mxl\"],\"application/vnd.recordare.musicxml+xml\":[\"musicxml\"],\"application/vnd.rig.cryptonote\":[\"cryptonote\"],\"application/vnd.rim.cod\":[\"cod\"],\"application/vnd.rn-realmedia\":[\"rm\"],\"application/vnd.rn-realmedia-vbr\":[\"rmvb\"],\"application/vnd.route66.link66+xml\":[\"link66\"],\"application/vnd.sailingtracker.track\":[\"st\"],\"application/vnd.seemail\":[\"see\"],\"application/vnd.sema\":[\"sema\"],\"application/vnd.semd\":[\"semd\"],\"application/vnd.semf\":[\"semf\"],\"application/vnd.shana.informed.formdata\":[\"ifm\"],\"application/vnd.shana.informed.formtemplate\":[\"itp\"],\"application/vnd.shana.informed.interchange\":[\"iif\"],\"application/vnd.shana.informed.package\":[\"ipk\"],\"application/vnd.simtech-mindmapper\":[\"twd\",\"twds\"],\"application/vnd.smaf\":[\"mmf\"],\"application/vnd.smart.teacher\":[\"teacher\"],\"application/vnd.software602.filler.form+xml\":[\"fo\"],\"application/vnd.solent.sdkm+xml\":[\"sdkm\",\"sdkd\"],\"application/vnd.spotfire.dxp\":[\"dxp\"],\"application/vnd.spotfire.sfs\":[\"sfs\"],\"application/vnd.stardivision.calc\":[\"sdc\"],\"application/vnd.stardivision.draw\":[\"sda\"],\"application/vnd.stardivision.impress\":[\"sdd\"],\"application/vnd.stardivision.math\":[\"smf\"],\"application/vnd.stardivision.writer\":[\"sdw\",\"vor\"],\"application/vnd.stardivision.writer-global\":[\"sgl\"],\"application/vnd.stepmania.package\":[\"smzip\"],\"application/vnd.stepmania.stepchart\":[\"sm\"],\"application/vnd.sun.wadl+xml\":[\"wadl\"],\"application/vnd.sun.xml.calc\":[\"sxc\"],\"application/vnd.sun.xml.calc.template\":[\"stc\"],\"application/vnd.sun.xml.draw\":[\"sxd\"],\"application/vnd.sun.xml.draw.template\":[\"std\"],\"application/vnd.sun.xml.impress\":[\"sxi\"],\"application/vnd.sun.xml.impress.template\":[\"sti\"],\"application/vnd.sun.xml.math\":[\"sxm\"],\"application/vnd.sun.xml.writer\":[\"sxw\"],\"application/vnd.sun.xml.writer.global\":[\"sxg\"],\"application/vnd.sun.xml.writer.template\":[\"stw\"],\"application/vnd.sus-calendar\":[\"sus\",\"susp\"],\"application/vnd.svd\":[\"svd\"],\"application/vnd.symbian.install\":[\"sis\",\"sisx\"],\"application/vnd.syncml+xml\":[\"xsm\"],\"application/vnd.syncml.dm+wbxml\":[\"bdm\"],\"application/vnd.syncml.dm+xml\":[\"xdm\"],\"application/vnd.syncml.dmddf+xml\":[\"ddf\"],\"application/vnd.tao.intent-module-archive\":[\"tao\"],\"application/vnd.tcpdump.pcap\":[\"pcap\",\"cap\",\"dmp\"],\"application/vnd.tmobile-livetv\":[\"tmo\"],\"application/vnd.trid.tpt\":[\"tpt\"],\"application/vnd.triscape.mxs\":[\"mxs\"],\"application/vnd.trueapp\":[\"tra\"],\"application/vnd.ufdl\":[\"ufd\",\"ufdl\"],\"application/vnd.uiq.theme\":[\"utz\"],\"application/vnd.umajin\":[\"umj\"],\"application/vnd.unity\":[\"unityweb\"],\"application/vnd.uoml+xml\":[\"uoml\"],\"application/vnd.vcx\":[\"vcx\"],\"application/vnd.visio\":[\"vsd\",\"vst\",\"vss\",\"vsw\"],\"application/vnd.visionary\":[\"vis\"],\"application/vnd.vsf\":[\"vsf\"],\"application/vnd.wap.wbxml\":[\"wbxml\"],\"application/vnd.wap.wmlc\":[\"wmlc\"],\"application/vnd.wap.wmlscriptc\":[\"wmlsc\"],\"application/vnd.webturbo\":[\"wtb\"],\"application/vnd.wolfram.player\":[\"nbp\"],\"application/vnd.wordperfect\":[\"wpd\"],\"application/vnd.wqd\":[\"wqd\"],\"application/vnd.wt.stf\":[\"stf\"],\"application/vnd.xara\":[\"xar\"],\"application/vnd.xfdl\":[\"xfdl\"],\"application/vnd.yamaha.hv-dic\":[\"hvd\"],\"application/vnd.yamaha.hv-script\":[\"hvs\"],\"application/vnd.yamaha.hv-voice\":[\"hvp\"],\"application/vnd.yamaha.openscoreformat\":[\"osf\"],\"application/vnd.yamaha.openscoreformat.osfpvg+xml\":[\"osfpvg\"],\"application/vnd.yamaha.smaf-audio\":[\"saf\"],\"application/vnd.yamaha.smaf-phrase\":[\"spf\"],\"application/vnd.yellowriver-custom-menu\":[\"cmp\"],\"application/vnd.zul\":[\"zir\",\"zirz\"],\"application/vnd.zzazz.deck+xml\":[\"zaz\"],\"application/x-7z-compressed\":[\"7z\"],\"application/x-abiword\":[\"abw\"],\"application/x-ace-compressed\":[\"ace\"],\"application/x-apple-diskimage\":[\"*dmg\"],\"application/x-arj\":[\"arj\"],\"application/x-authorware-bin\":[\"aab\",\"x32\",\"u32\",\"vox\"],\"application/x-authorware-map\":[\"aam\"],\"application/x-authorware-seg\":[\"aas\"],\"application/x-bcpio\":[\"bcpio\"],\"application/x-bdoc\":[\"*bdoc\"],\"application/x-bittorrent\":[\"torrent\"],\"application/x-blorb\":[\"blb\",\"blorb\"],\"application/x-bzip\":[\"bz\"],\"application/x-bzip2\":[\"bz2\",\"boz\"],\"application/x-cbr\":[\"cbr\",\"cba\",\"cbt\",\"cbz\",\"cb7\"],\"application/x-cdlink\":[\"vcd\"],\"application/x-cfs-compressed\":[\"cfs\"],\"application/x-chat\":[\"chat\"],\"application/x-chess-pgn\":[\"pgn\"],\"application/x-chrome-extension\":[\"crx\"],\"application/x-cocoa\":[\"cco\"],\"application/x-conference\":[\"nsc\"],\"application/x-cpio\":[\"cpio\"],\"application/x-csh\":[\"csh\"],\"application/x-debian-package\":[\"*deb\",\"udeb\"],\"application/x-dgc-compressed\":[\"dgc\"],\"application/x-director\":[\"dir\",\"dcr\",\"dxr\",\"cst\",\"cct\",\"cxt\",\"w3d\",\"fgd\",\"swa\"],\"application/x-doom\":[\"wad\"],\"application/x-dtbncx+xml\":[\"ncx\"],\"application/x-dtbook+xml\":[\"dtb\"],\"application/x-dtbresource+xml\":[\"res\"],\"application/x-dvi\":[\"dvi\"],\"application/x-envoy\":[\"evy\"],\"application/x-eva\":[\"eva\"],\"application/x-font-bdf\":[\"bdf\"],\"application/x-font-ghostscript\":[\"gsf\"],\"application/x-font-linux-psf\":[\"psf\"],\"application/x-font-pcf\":[\"pcf\"],\"application/x-font-snf\":[\"snf\"],\"application/x-font-type1\":[\"pfa\",\"pfb\",\"pfm\",\"afm\"],\"application/x-freearc\":[\"arc\"],\"application/x-futuresplash\":[\"spl\"],\"application/x-gca-compressed\":[\"gca\"],\"application/x-glulx\":[\"ulx\"],\"application/x-gnumeric\":[\"gnumeric\"],\"application/x-gramps-xml\":[\"gramps\"],\"application/x-gtar\":[\"gtar\"],\"application/x-hdf\":[\"hdf\"],\"application/php\":[\"php\"],\"application/x-install-instructions\":[\"install\"],\"application/x-iso9660-image\":[\"*iso\"],\"application/x-java-archive-diff\":[\"jardiff\"],\"application/x-java-jnlp-file\":[\"jnlp\"],\"application/x-keepass2\":[\"kdbx\"],\"application/x-latex\":[\"latex\"],\"application/x-lua-bytecode\":[\"luac\"],\"application/x-lzh-compressed\":[\"lzh\",\"lha\"],\"application/x-makeself\":[\"run\"],\"application/x-mie\":[\"mie\"],\"application/x-mobipocket-ebook\":[\"prc\",\"mobi\"],\"application/x-ms-application\":[\"application\"],\"application/x-ms-shortcut\":[\"lnk\"],\"application/x-ms-wmd\":[\"wmd\"],\"application/x-ms-wmz\":[\"wmz\"],\"application/x-ms-xbap\":[\"xbap\"],\"application/x-msaccess\":[\"mdb\"],\"application/x-msbinder\":[\"obd\"],\"application/x-mscardfile\":[\"crd\"],\"application/x-msclip\":[\"clp\"],\"application/x-msdos-program\":[\"*exe\"],\"application/x-msdownload\":[\"*exe\",\"*dll\",\"com\",\"bat\",\"*msi\"],\"application/x-msmediaview\":[\"mvb\",\"m13\",\"m14\"],\"application/x-msmetafile\":[\"*wmf\",\"*wmz\",\"*emf\",\"emz\"],\"application/x-msmoney\":[\"mny\"],\"application/x-mspublisher\":[\"pub\"],\"application/x-msschedule\":[\"scd\"],\"application/x-msterminal\":[\"trm\"],\"application/x-mswrite\":[\"wri\"],\"application/x-netcdf\":[\"nc\",\"cdf\"],\"application/x-ns-proxy-autoconfig\":[\"pac\"],\"application/x-nzb\":[\"nzb\"],\"application/x-perl\":[\"pl\",\"pm\"],\"application/x-pilot\":[\"*prc\",\"*pdb\"],\"application/x-pkcs12\":[\"p12\",\"pfx\"],\"application/x-pkcs7-certificates\":[\"p7b\",\"spc\"],\"application/x-pkcs7-certreqresp\":[\"p7r\"],\"application/x-rar-compressed\":[\"*rar\"],\"application/x-redhat-package-manager\":[\"rpm\"],\"application/x-research-info-systems\":[\"ris\"],\"application/x-sea\":[\"sea\"],\"application/x-sh\":[\"sh\"],\"application/x-shar\":[\"shar\"],\"application/x-shockwave-flash\":[\"swf\"],\"application/x-silverlight-app\":[\"xap\"],\"application/x-sql\":[\"sql\"],\"application/x-stuffit\":[\"sit\"],\"application/x-stuffitx\":[\"sitx\"],\"application/x-subrip\":[\"srt\"],\"application/x-sv4cpio\":[\"sv4cpio\"],\"application/x-sv4crc\":[\"sv4crc\"],\"application/x-t3vm-image\":[\"t3\"],\"application/x-tads\":[\"gam\"],\"application/x-tar\":[\"tar\"],\"application/x-tcl\":[\"tcl\",\"tk\"],\"application/x-tex\":[\"tex\"],\"application/x-tex-tfm\":[\"tfm\"],\"application/x-texinfo\":[\"texinfo\",\"texi\"],\"application/x-tgif\":[\"*obj\"],\"application/x-ustar\":[\"ustar\"],\"application/x-virtualbox-hdd\":[\"hdd\"],\"application/x-virtualbox-ova\":[\"ova\"],\"application/x-virtualbox-ovf\":[\"ovf\"],\"application/x-virtualbox-vbox\":[\"vbox\"],\"application/x-virtualbox-vbox-extpack\":[\"vbox-extpack\"],\"application/x-virtualbox-vdi\":[\"vdi\"],\"application/x-virtualbox-vhd\":[\"vhd\"],\"application/x-virtualbox-vmdk\":[\"vmdk\"],\"application/x-wais-source\":[\"src\"],\"application/x-web-app-manifest+json\":[\"webapp\"],\"application/x-x509-ca-cert\":[\"der\",\"crt\",\"pem\"],\"application/x-xfig\":[\"fig\"],\"application/x-xliff+xml\":[\"*xlf\"],\"application/x-xpinstall\":[\"xpi\"],\"application/x-xz\":[\"xz\"],\"application/x-zmachine\":[\"z1\",\"z2\",\"z3\",\"z4\",\"z5\",\"z6\",\"z7\",\"z8\"],\"audio/vnd.dece.audio\":[\"uva\",\"uvva\"],\"audio/vnd.digital-winds\":[\"eol\"],\"audio/vnd.dra\":[\"dra\"],\"audio/vnd.dts\":[\"dts\"],\"audio/vnd.dts.hd\":[\"dtshd\"],\"audio/vnd.lucent.voice\":[\"lvp\"],\"audio/vnd.ms-playready.media.pya\":[\"pya\"],\"audio/vnd.nuera.ecelp4800\":[\"ecelp4800\"],\"audio/vnd.nuera.ecelp7470\":[\"ecelp7470\"],\"audio/vnd.nuera.ecelp9600\":[\"ecelp9600\"],\"audio/vnd.rip\":[\"rip\"],\"audio/x-aiff\":[\"aif\",\"aiff\",\"aifc\"],\"audio/x-caf\":[\"caf\"],\"audio/x-flac\":[\"flac\"],\"audio/x-m4a\":[\"*m4a\"],\"audio/x-matroska\":[\"mka\"],\"audio/x-mpegurl\":[\"m3u\"],\"audio/x-ms-wax\":[\"wax\"],\"audio/x-ms-wma\":[\"wma\"],\"audio/x-pn-realaudio\":[\"ram\",\"ra\"],\"audio/x-pn-realaudio-plugin\":[\"rmp\"],\"audio/x-realaudio\":[\"*ra\"],\"audio/x-wav\":[\"*wav\"],\"chemical/x-cdx\":[\"cdx\"],\"chemical/x-cif\":[\"cif\"],\"chemical/x-cmdf\":[\"cmdf\"],\"chemical/x-cml\":[\"cml\"],\"chemical/x-csml\":[\"csml\"],\"chemical/x-xyz\":[\"xyz\"],\"image/prs.btif\":[\"btif\"],\"image/prs.pti\":[\"pti\"],\"image/vnd.adobe.photoshop\":[\"psd\"],\"image/vnd.airzip.accelerator.azv\":[\"azv\"],\"image/vnd.dece.graphic\":[\"uvi\",\"uvvi\",\"uvg\",\"uvvg\"],\"image/vnd.djvu\":[\"djvu\",\"djv\"],\"image/vnd.dvb.subtitle\":[\"*sub\"],\"image/vnd.dwg\":[\"dwg\"],\"image/vnd.dxf\":[\"dxf\"],\"image/vnd.fastbidsheet\":[\"fbs\"],\"image/vnd.fpx\":[\"fpx\"],\"image/vnd.fst\":[\"fst\"],\"image/vnd.fujixerox.edmics-mmr\":[\"mmr\"],\"image/vnd.fujixerox.edmics-rlc\":[\"rlc\"],\"image/vnd.microsoft.icon\":[\"ico\"],\"image/vnd.ms-dds\":[\"dds\"],\"image/vnd.ms-modi\":[\"mdi\"],\"image/vnd.ms-photo\":[\"wdp\"],\"image/vnd.net-fpx\":[\"npx\"],\"image/vnd.pco.b16\":[\"b16\"],\"image/vnd.tencent.tap\":[\"tap\"],\"image/vnd.valve.source.texture\":[\"vtf\"],\"image/vnd.wap.wbmp\":[\"wbmp\"],\"image/vnd.xiff\":[\"xif\"],\"image/vnd.zbrush.pcx\":[\"pcx\"],\"image/x-3ds\":[\"3ds\"],\"image/x-cmu-raster\":[\"ras\"],\"image/x-cmx\":[\"cmx\"],\"image/x-freehand\":[\"fh\",\"fhc\",\"fh4\",\"fh5\",\"fh7\"],\"image/x-icon\":[\"*ico\"],\"image/x-jng\":[\"jng\"],\"image/x-mrsid-image\":[\"sid\"],\"image/x-ms-bmp\":[\"*bmp\"],\"image/x-pcx\":[\"*pcx\"],\"image/x-pict\":[\"pic\",\"pct\"],\"image/x-portable-anymap\":[\"pnm\"],\"image/x-portable-bitmap\":[\"pbm\"],\"image/x-portable-graymap\":[\"pgm\"],\"image/x-portable-pixmap\":[\"ppm\"],\"image/x-rgb\":[\"rgb\"],\"image/x-tga\":[\"tga\"],\"image/x-xbitmap\":[\"xbm\"],\"image/x-xpixmap\":[\"xpm\"],\"image/x-xwindowdump\":[\"xwd\"],\"message/vnd.wfa.wsc\":[\"wsc\"],\"model/vnd.collada+xml\":[\"dae\"],\"model/vnd.dwf\":[\"dwf\"],\"model/vnd.gdl\":[\"gdl\"],\"model/vnd.gtw\":[\"gtw\"],\"model/vnd.mts\":[\"mts\"],\"model/vnd.opengex\":[\"ogex\"],\"model/vnd.parasolid.transmit.binary\":[\"x_b\"],\"model/vnd.parasolid.transmit.text\":[\"x_t\"],\"model/vnd.usdz+zip\":[\"usdz\"],\"model/vnd.valve.source.compiled-map\":[\"bsp\"],\"model/vnd.vtu\":[\"vtu\"],\"text/prs.lines.tag\":[\"dsc\"],\"text/vnd.curl\":[\"curl\"],\"text/vnd.curl.dcurl\":[\"dcurl\"],\"text/vnd.curl.mcurl\":[\"mcurl\"],\"text/vnd.curl.scurl\":[\"scurl\"],\"text/vnd.dvb.subtitle\":[\"sub\"],\"text/vnd.fly\":[\"fly\"],\"text/vnd.fmi.flexstor\":[\"flx\"],\"text/vnd.graphviz\":[\"gv\"],\"text/vnd.in3d.3dml\":[\"3dml\"],\"text/vnd.in3d.spot\":[\"spot\"],\"text/vnd.sun.j2me.app-descriptor\":[\"jad\"],\"text/vnd.wap.wml\":[\"wml\"],\"text/vnd.wap.wmlscript\":[\"wmls\"],\"text/x-asm\":[\"s\",\"asm\"],\"text/x-c\":[\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"],\"text/x-component\":[\"htc\"],\"text/x-fortran\":[\"f\",\"for\",\"f77\",\"f90\"],\"text/x-handlebars-template\":[\"hbs\"],\"text/x-java-source\":[\"java\"],\"text/x-lua\":[\"lua\"],\"text/x-markdown\":[\"mkd\"],\"text/x-nfo\":[\"nfo\"],\"text/x-opml\":[\"opml\"],\"text/x-org\":[\"*org\"],\"text/x-pascal\":[\"p\",\"pas\"],\"text/x-processing\":[\"pde\"],\"text/x-sass\":[\"sass\"],\"text/x-scss\":[\"scss\"],\"text/x-setext\":[\"etx\"],\"text/x-sfv\":[\"sfv\"],\"text/x-suse-ymp\":[\"ymp\"],\"text/x-uuencode\":[\"uu\"],\"text/x-vcalendar\":[\"vcs\"],\"text/x-vcard\":[\"vcf\"],\"video/vnd.dece.hd\":[\"uvh\",\"uvvh\"],\"video/vnd.dece.mobile\":[\"uvm\",\"uvvm\"],\"video/vnd.dece.pd\":[\"uvp\",\"uvvp\"],\"video/vnd.dece.sd\":[\"uvs\",\"uvvs\"],\"video/vnd.dece.video\":[\"uvv\",\"uvvv\"],\"video/vnd.dvb.file\":[\"dvb\"],\"video/vnd.fvt\":[\"fvt\"],\"video/vnd.mpegurl\":[\"mxu\",\"m4u\"],\"video/vnd.ms-playready.media.pyv\":[\"pyv\"],\"video/vnd.uvvu.mp4\":[\"uvu\",\"uvvu\"],\"video/vnd.vivo\":[\"viv\"],\"video/x-f4v\":[\"f4v\"],\"video/x-fli\":[\"fli\"],\"video/x-flv\":[\"flv\"],\"video/x-m4v\":[\"m4v\"],\"video/x-matroska\":[\"mkv\",\"mk3d\",\"mks\"],\"video/x-mng\":[\"mng\"],\"video/x-ms-asf\":[\"asf\",\"asx\"],\"video/x-ms-vob\":[\"vob\"],\"video/x-ms-wm\":[\"wm\"],\"video/x-ms-wmv\":[\"wmv\"],\"video/x-ms-wmx\":[\"wmx\"],\"video/x-ms-wvx\":[\"wvx\"],\"video/x-msvideo\":[\"avi\"],\"video/x-sgi-movie\":[\"movie\"],\"video/x-smv\":[\"smv\"],\"x-conference/x-cooltalk\":[\"ice\"]};\n\n\nconst standard : MimeTypeMap = {\"audio/aac\":[\"aac\"],\"application/andrew-inset\":[\"ez\"],\"application/applixware\":[\"aw\"],\"application/atom+xml\":[\"atom\"],\"application/atomcat+xml\":[\"atomcat\"],\"application/atomdeleted+xml\":[\"atomdeleted\"],\"application/atomsvc+xml\":[\"atomsvc\"],\"application/atsc-dwd+xml\":[\"dwd\"],\"application/atsc-held+xml\":[\"held\"],\"application/atsc-rsat+xml\":[\"rsat\"],\"application/bdoc\":[\"bdoc\"],\"application/calendar+xml\":[\"xcs\"],\"application/ccxml+xml\":[\"ccxml\"],\"application/cdfx+xml\":[\"cdfx\"],\"application/cdmi-capability\":[\"cdmia\"],\"application/cdmi-container\":[\"cdmic\"],\"application/cdmi-domain\":[\"cdmid\"],\"application/cdmi-object\":[\"cdmio\"],\"application/cdmi-queue\":[\"cdmiq\"],\"application/cu-seeme\":[\"cu\"],\"application/dash+xml\":[\"mpd\"],\"application/davmount+xml\":[\"davmount\"],\"application/docbook+xml\":[\"dbk\"],\"application/dssc+der\":[\"dssc\"],\"application/dssc+xml\":[\"xdssc\"],\"application/ecmascript\":[\"ecma\",\"es\"],\"application/emma+xml\":[\"emma\"],\"application/emotionml+xml\":[\"emotionml\"],\"application/epub+zip\":[\"epub\"],\"application/exi\":[\"exi\"],\"application/fdt+xml\":[\"fdt\"],\"application/font-tdpfr\":[\"pfr\"],\"application/geo+json\":[\"geojson\"],\"application/gml+xml\":[\"gml\"],\"application/gpx+xml\":[\"gpx\"],\"application/gxf\":[\"gxf\"],\"application/gzip\":[\"gz\"],\"application/hjson\":[\"hjson\"],\"application/hyperstudio\":[\"stk\"],\"application/inkml+xml\":[\"ink\",\"inkml\"],\"application/ipfix\":[\"ipfix\"],\"application/its+xml\":[\"its\"],\"application/java-archive\":[\"jar\",\"war\",\"ear\"],\"application/java-serialized-object\":[\"ser\"],\"application/java-vm\":[\"class\"],\"application/javascript\":[\"js\",\"mjs\"],\"application/json\":[\"json\",\"map\"],\"application/json5\":[\"json5\"],\"application/jsonml+json\":[\"jsonml\"],\"application/ld+json\":[\"jsonld\"],\"application/lgr+xml\":[\"lgr\"],\"application/lost+xml\":[\"lostxml\"],\"application/mac-binhex40\":[\"hqx\"],\"application/mac-compactpro\":[\"cpt\"],\"application/mads+xml\":[\"mads\"],\"application/manifest+json\":[\"webmanifest\"],\"application/marc\":[\"mrc\"],\"application/marcxml+xml\":[\"mrcx\"],\"application/mathematica\":[\"ma\",\"nb\",\"mb\"],\"application/mathml+xml\":[\"mathml\"],\"application/mbox\":[\"mbox\"],\"application/mediaservercontrol+xml\":[\"mscml\"],\"application/metalink+xml\":[\"metalink\"],\"application/metalink4+xml\":[\"meta4\"],\"application/mets+xml\":[\"mets\"],\"application/mmt-aei+xml\":[\"maei\"],\"application/mmt-usd+xml\":[\"musd\"],\"application/mods+xml\":[\"mods\"],\"application/mp21\":[\"m21\",\"mp21\"],\"application/mp4\":[\"mp4s\",\"m4p\"],\"application/mrb-consumer+xml\":[\"*xdf\"],\"application/mrb-publish+xml\":[\"*xdf\"],\"application/msword\":[\"doc\",\"dot\"],\"application/mxf\":[\"mxf\"],\"application/n-quads\":[\"nq\"],\"application/n-triples\":[\"nt\"],\"application/node\":[\"cjs\"],\"application/octet-stream\":[\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"],\"application/oda\":[\"oda\"],\"application/oebps-package+xml\":[\"opf\"],\"application/ogg\":[\"ogx\"],\"application/omdoc+xml\":[\"omdoc\"],\"application/onenote\":[\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"],\"application/oxps\":[\"oxps\"],\"application/p2p-overlay+xml\":[\"relo\"],\"application/patch-ops-error+xml\":[\"*xer\"],\"application/pdf\":[\"pdf\"],\"application/pgp-encrypted\":[\"pgp\"],\"application/pgp-signature\":[\"asc\",\"sig\"],\"application/pics-rules\":[\"prf\"],\"application/pkcs10\":[\"p10\"],\"application/pkcs7-mime\":[\"p7m\",\"p7c\"],\"application/pkcs7-signature\":[\"p7s\"],\"application/pkcs8\":[\"p8\"],\"application/pkix-attr-cert\":[\"ac\"],\"application/pkix-cert\":[\"cer\"],\"application/pkix-crl\":[\"crl\"],\"application/pkix-pkipath\":[\"pkipath\"],\"application/pkixcmp\":[\"pki\"],\"application/pls+xml\":[\"pls\"],\"application/postscript\":[\"ai\",\"eps\",\"ps\"],\"application/provenance+xml\":[\"provx\"],\"application/pskc+xml\":[\"pskcxml\"],\"application/raml+yaml\":[\"raml\"],\"application/rdf+xml\":[\"rdf\",\"owl\"],\"application/reginfo+xml\":[\"rif\"],\"application/relax-ng-compact-syntax\":[\"rnc\"],\"application/resource-lists+xml\":[\"rl\"],\"application/resource-lists-diff+xml\":[\"rld\"],\"application/rls-services+xml\":[\"rs\"],\"application/route-apd+xml\":[\"rapd\"],\"application/route-s-tsid+xml\":[\"sls\"],\"application/route-usd+xml\":[\"rusd\"],\"application/rpki-ghostbusters\":[\"gbr\"],\"application/rpki-manifest\":[\"mft\"],\"application/rpki-roa\":[\"roa\"],\"application/rsd+xml\":[\"rsd\"],\"application/rss+xml\":[\"rss\"],\"application/rtf\":[\"rtf\"],\"application/sbml+xml\":[\"sbml\"],\"application/scvp-cv-request\":[\"scq\"],\"application/scvp-cv-response\":[\"scs\"],\"application/scvp-vp-request\":[\"spq\"],\"application/scvp-vp-response\":[\"spp\"],\"application/sdp\":[\"sdp\"],\"application/senml+xml\":[\"senmlx\"],\"application/sensml+xml\":[\"sensmlx\"],\"application/set-payment-initiation\":[\"setpay\"],\"application/set-registration-initiation\":[\"setreg\"],\"application/shf+xml\":[\"shf\"],\"application/sieve\":[\"siv\",\"sieve\"],\"application/smil+xml\":[\"smi\",\"smil\"],\"application/sparql-query\":[\"rq\"],\"application/sparql-results+xml\":[\"srx\"],\"application/srgs\":[\"gram\"],\"application/srgs+xml\":[\"grxml\"],\"application/sru+xml\":[\"sru\"],\"application/ssdl+xml\":[\"ssdl\"],\"application/ssml+xml\":[\"ssml\"],\"application/swid+xml\":[\"swidtag\"],\"application/tei+xml\":[\"tei\",\"teicorpus\"],\"application/thraud+xml\":[\"tfi\"],\"application/timestamped-data\":[\"tsd\"],\"application/toml\":[\"toml\"],\"application/ttml+xml\":[\"ttml\"],\"application/ubjson\":[\"ubj\"],\"application/urc-ressheet+xml\":[\"rsheet\"],\"application/urc-targetdesc+xml\":[\"td\"],\"application/voicexml+xml\":[\"vxml\"],\"application/wasm\":[\"wasm\"],\"application/widget\":[\"wgt\"],\"application/winhlp\":[\"hlp\"],\"application/wsdl+xml\":[\"wsdl\"],\"application/wspolicy+xml\":[\"wspolicy\"],\"application/xaml+xml\":[\"xaml\"],\"application/xcap-att+xml\":[\"xav\"],\"application/xcap-caps+xml\":[\"xca\"],\"application/xcap-diff+xml\":[\"xdf\"],\"application/xcap-el+xml\":[\"xel\"],\"application/xcap-error+xml\":[\"xer\"],\"application/xcap-ns+xml\":[\"xns\"],\"application/xenc+xml\":[\"xenc\"],\"application/xhtml+xml\":[\"xhtml\",\"xht\"],\"application/xliff+xml\":[\"xlf\"],\"application/xml\":[\"xml\",\"xsl\",\"xsd\",\"rng\"],\"application/xml-dtd\":[\"dtd\"],\"application/xop+xml\":[\"xop\"],\"application/xproc+xml\":[\"xpl\"],\"application/xslt+xml\":[\"*xsl\",\"xslt\"],\"application/xspf+xml\":[\"xspf\"],\"application/xv+xml\":[\"mxml\",\"xhvml\",\"xvml\",\"xvm\"],\"application/yang\":[\"yang\"],\"application/yin+xml\":[\"yin\"],\"application/zip\":[\"zip\"],\"audio/3gpp\":[\"*3gpp\"],\"audio/adpcm\":[\"adp\"],\"audio/basic\":[\"au\",\"snd\"],\"audio/midi\":[\"mid\",\"midi\",\"kar\",\"rmi\"],\"audio/mobile-xmf\":[\"mxmf\"],\"audio/mp3\":[\"*mp3\"],\"audio/mp4\":[\"m4a\",\"mp4a\"],\"audio/mpeg\":[\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"],\"audio/ogg\":[\"oga\",\"ogg\",\"spx\"],\"audio/s3m\":[\"s3m\"],\"audio/silk\":[\"sil\"],\"audio/wav\":[\"wav\"],\"audio/wave\":[\"*wav\"],\"audio/webm\":[\"weba\"],\"audio/xm\":[\"xm\"],\"font/collection\":[\"ttc\"],\"font/otf\":[\"otf\"],\"font/ttf\":[\"ttf\"],\"font/woff\":[\"woff\"],\"font/woff2\":[\"woff2\"],\"image/aces\":[\"exr\"],\"image/apng\":[\"apng\"],\"image/avif\":[\"avif\"],\"image/bmp\":[\"bmp\"],\"image/cgm\":[\"cgm\"],\"image/dicom-rle\":[\"drle\"],\"image/emf\":[\"emf\"],\"image/fits\":[\"fits\"],\"image/g3fax\":[\"g3\"],\"image/gif\":[\"gif\"],\"image/heic\":[\"heic\"],\"image/heic-sequence\":[\"heics\"],\"image/heif\":[\"heif\"],\"image/heif-sequence\":[\"heifs\"],\"image/hej2k\":[\"hej2\"],\"image/hsj2\":[\"hsj2\"],\"image/ief\":[\"ief\"],\"image/jls\":[\"jls\"],\"image/jp2\":[\"jp2\",\"jpg2\"],\"image/jpeg\":[\"jpeg\",\"jpg\",\"jpe\"],\"image/jph\":[\"jph\"],\"image/jphc\":[\"jhc\"],\"image/jpm\":[\"jpm\"],\"image/jpx\":[\"jpx\",\"jpf\"],\"image/jxr\":[\"jxr\"],\"image/jxra\":[\"jxra\"],\"image/jxrs\":[\"jxrs\"],\"image/jxs\":[\"jxs\"],\"image/jxsc\":[\"jxsc\"],\"image/jxsi\":[\"jxsi\"],\"image/jxss\":[\"jxss\"],\"image/ktx\":[\"ktx\"],\"image/ktx2\":[\"ktx2\"],\"image/png\":[\"png\"],\"image/sgi\":[\"sgi\"],\"image/svg+xml\":[\"svg\",\"svgz\"],\"image/t38\":[\"t38\"],\"image/tiff\":[\"tif\",\"tiff\"],\"image/tiff-fx\":[\"tfx\"],\"image/webp\":[\"webp\"],\"image/wmf\":[\"wmf\"],\"message/disposition-notification\":[\"disposition-notification\"],\"message/global\":[\"u8msg\"],\"message/global-delivery-status\":[\"u8dsn\"],\"message/global-disposition-notification\":[\"u8mdn\"],\"message/global-headers\":[\"u8hdr\"],\"message/rfc822\":[\"eml\",\"mime\"],\"model/3mf\":[\"3mf\"],\"model/gltf+json\":[\"gltf\"],\"model/gltf-binary\":[\"glb\"],\"model/iges\":[\"igs\",\"iges\"],\"model/mesh\":[\"msh\",\"mesh\",\"silo\"],\"model/mtl\":[\"mtl\"],\"model/obj\":[\"obj\"],\"model/stl\":[\"stl\"],\"model/vrml\":[\"wrl\",\"vrml\"],\"model/x3d+binary\":[\"*x3db\",\"x3dbz\"],\"model/x3d+fastinfoset\":[\"x3db\"],\"model/x3d+vrml\":[\"*x3dv\",\"x3dvz\"],\"model/x3d+xml\":[\"x3d\",\"x3dz\"],\"model/x3d-vrml\":[\"x3dv\"],\"text/cache-manifest\":[\"appcache\",\"manifest\"],\"text/calendar\":[\"ics\",\"ifb\"],\"text/coffeescript\":[\"coffee\",\"litcoffee\"],\"text/css\":[\"css\"],\"text/csv\":[\"csv\"],\"text/html\":[\"html\",\"htm\",\"shtml\"],\"text/jade\":[\"jade\"],\"text/jsx\":[\"jsx\"],\"text/less\":[\"less\"],\"text/markdown\":[\"markdown\",\"md\"],\"text/mathml\":[\"mml\"],\"text/mdx\":[\"mdx\"],\"text/n3\":[\"n3\"],\"text/plain\":[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"],\"text/richtext\":[\"rtx\"],\"text/rtf\":[\"*rtf\"],\"text/sgml\":[\"sgml\",\"sgm\"],\"text/shex\":[\"shex\"],\"text/slim\":[\"slim\",\"slm\"],\"text/spdx\":[\"spdx\"],\"text/stylus\":[\"stylus\",\"styl\"],\"text/tab-separated-values\":[\"tsv\"],\"text/troff\":[\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"],\"text/turtle\":[\"ttl\"],\"text/uri-list\":[\"uri\",\"uris\",\"urls\"],\"text/vcard\":[\"vcard\"],\"text/vtt\":[\"vtt\"],\"text/xml\":[\"*xml\"],\"text/yaml\":[\"yaml\",\"yml\"],\"video/3gpp\":[\"3gp\",\"3gpp\"],\"video/3gpp2\":[\"3g2\"],\"video/h261\":[\"h261\"],\"video/h263\":[\"h263\"],\"video/h264\":[\"h264\"],\"video/jpeg\":[\"jpgv\"],\"video/jpm\":[\"*jpm\",\"jpgm\"],\"video/mj2\":[\"mj2\",\"mjp2\"],\"video/mp2t\":[\"ts\"],\"video/mp4\":[\"mp4\",\"mp4v\",\"mpg4\"],\"video/mpeg\":[\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"],\"video/ogg\":[\"ogv\"],\"video/quicktime\":[\"qt\",\"mov\"],\"video/webm\":[\"webm\"]};\n\nexport interface MimeTypeMap{\n  [index: string]: Array<string>; \n}\n\nexport class Mime {\n  readonly types: Map<string, string> = new Map<string, string>();\n  readonly extensions: Map<string, string> = new Map<string, string>();\n  \n  constructor(...typeMaps : Array<MimeTypeMap>) {\n    for (var typeMap of typeMaps) {\n      this.define(typeMap);\n    }\n  }\n\n  define(typeMap: MimeTypeMap, force?: boolean) {\n    for (var type in typeMap) {\n      let extensions = typeMap[type].map(function (t: string) { return t.toLowerCase() });\n      type = type.toLowerCase();\n\n      for (var i = 0; i < extensions.length; i++) {\n        var ext = extensions[i];\n\n        // '*' prefix = not the preferred type for this extension.  So fixup the\n        // extension, and skip it.\n        if (ext[0] == '*') {\n          continue;\n        }\n\n        if (!force && this.types.has(ext)) {\n          throw new Error(\n            'Attempt to change mapping for \"' + ext +\n            '\" extension from \"' + this.types.get(ext) + '\" to \"' + type +\n            '\". Pass `force=true` to allow this, otherwise remove \"' + ext +\n            '\" from the list of extensions for \"' + type + '\".'\n          );\n        }\n\n        this.types.set(ext, type);\n      }\n\n      // Use first extension as default\n      if (force || !this.extensions.has(type)) {\n        let ext = extensions[0];\n        this.extensions.set(type, (ext[0] != '*') ? ext : ext.substr(1));\n      }\n    }\n  }\n\n  /**\n  * Lookup a mime type based on extension\n  */\n  getType(path : string) : string | undefined{\n    let last = path.replace(/^.*[/\\\\]/, '').toLowerCase();\n    let ext = last.replace(/^.*\\./, '').toLowerCase();\n\n    let hasPath = last.length < path.length;\n    let hasDot = ext.length < last.length - 1;\n\n    return ((hasDot || !hasPath) && this.types.has(ext)) ? this.types.get(ext) : undefined;\n  };\n\n  /**\n  * Return file extension associated with a mime type\n  */\n  getExtension(type: string): string | undefined {\n    let match : RegExpMatchArray | null = type.match(/^\\s*([^;\\s]*)/);\n    return (match && match[1] && this.extensions.has(match[1])) ? this.extensions.get(match[1].toLowerCase()) : undefined;\n  };\n}\n\nexport const mimelite = new Mime(standard);\nexport const mime = new Mime(standard, other);", "// Copyright 2018-2022 the Deno authors. All rights reserved. MIT license.\n\n/**\n * {@linkcode encode} and {@linkcode decode} for\n * [base64 URL safe](https://en.wikipedia.org/wiki/Base64#URL_applications) encoding.\n *\n * This module is browser compatible.\n *\n * @module\n */\n\nimport * as base64 from \"./base64.ts\";\n\n/*\n * Some variants allow or require omitting the padding '=' signs:\n * https://en.wikipedia.org/wiki/Base64#The_URL_applications\n * @param base64url\n */\nfunction addPaddingToBase64url(base64url: string): string {\n  if (base64url.length % 4 === 2) return base64url + \"==\";\n  if (base64url.length % 4 === 3) return base64url + \"=\";\n  if (base64url.length % 4 === 1) {\n    throw new TypeError(\"Illegal base64url string!\");\n  }\n  return base64url;\n}\n\nfunction convertBase64urlToBase64(b64url: string): string {\n  if (!/^[-_A-Z0-9]*?={0,2}$/i.test(b64url)) {\n    // Contains characters not part of base64url spec.\n    throw new TypeError(\"Failed to decode base64url: invalid character\");\n  }\n  return addPaddingToBase64url(b64url).replace(/\\-/g, \"+\").replace(/_/g, \"/\");\n}\n\nfunction convertBase64ToBase64url(b64: string): string {\n  return b64.replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\n\n/**\n * Encodes a given ArrayBuffer or string into a base64url representation\n * @param data\n */\nexport function encode(data: ArrayBuffer | string): string {\n  return convertBase64ToBase64url(base64.encode(data));\n}\n\n/**\n * Converts given base64url encoded data back to original\n * @param b64url\n */\nexport function decode(b64url: string): Uint8Array {\n  return base64.decode(convertBase64urlToBase64(b64url));\n}\n", "// Copyright 2018-2022 the Deno authors. All rights reserved. MIT license.\n\n/**\n * {@linkcode encode} and {@linkcode decode} for\n * [base64](https://en.wikipedia.org/wiki/Base64) encoding.\n *\n * This module is browser compatible.\n *\n * @module\n */\n\nconst base64abc = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"+\",\n  \"/\",\n];\n\n/**\n * CREDIT: https://gist.github.com/enepomnyaschih/72c423f727d395eeaa09697058238727\n * Encodes a given Uint8Array, ArrayBuffer or string into RFC4648 base64 representation\n * @param data\n */\nexport function encode(data: ArrayBuffer | string): string {\n  const uint8 = typeof data === \"string\"\n    ? new TextEncoder().encode(data)\n    : data instanceof Uint8Array\n    ? data\n    : new Uint8Array(data);\n  let result = \"\",\n    i;\n  const l = uint8.length;\n  for (i = 2; i < l; i += 3) {\n    result += base64abc[uint8[i - 2] >> 2];\n    result += base64abc[((uint8[i - 2] & 0x03) << 4) | (uint8[i - 1] >> 4)];\n    result += base64abc[((uint8[i - 1] & 0x0f) << 2) | (uint8[i] >> 6)];\n    result += base64abc[uint8[i] & 0x3f];\n  }\n  if (i === l + 1) {\n    // 1 octet yet to write\n    result += base64abc[uint8[i - 2] >> 2];\n    result += base64abc[(uint8[i - 2] & 0x03) << 4];\n    result += \"==\";\n  }\n  if (i === l) {\n    // 2 octets yet to write\n    result += base64abc[uint8[i - 2] >> 2];\n    result += base64abc[((uint8[i - 2] & 0x03) << 4) | (uint8[i - 1] >> 4)];\n    result += base64abc[(uint8[i - 1] & 0x0f) << 2];\n    result += \"=\";\n  }\n  return result;\n}\n\n/**\n * Decodes a given RFC4648 base64 encoded string\n * @param b64\n */\nexport function decode(b64: string): Uint8Array {\n  const binString = atob(b64);\n  const size = binString.length;\n  const bytes = new Uint8Array(size);\n  for (let i = 0; i < size; i++) {\n    bytes[i] = binString.charCodeAt(i);\n  }\n  return bytes;\n}\n", "export const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\n\nexport function isArray<T>(input: T[] | unknown): input is T[] {\n  return Array.isArray(input);\n}\n\nexport function isDefined<T>(input: T | undefined): input is T {\n  return input !== undefined;\n}\n\nexport function isNotNull<T>(input: T | null): input is T {\n  return input !== null;\n}\n\nexport function isNotNumber<T>(input: T | number): input is T {\n  return typeof input !== \"number\";\n}\n\nexport function isNotString<T>(input: T | string): input is T {\n  return typeof input !== \"string\";\n}\n\nexport function isNull(input: unknown): input is null {\n  return input === null;\n}\n\nexport function isNumber(input: unknown): input is number {\n  return typeof input === \"number\";\n}\n\nexport function isObject(input: unknown): input is Record<string, unknown> {\n  return (\n    input !== null && typeof input === \"object\" &&\n    Array.isArray(input) === false\n  );\n}\n\nexport function isString(input: unknown): input is string {\n  return typeof input === \"string\";\n}\n\nexport function isUndefined(input: unknown): input is undefined {\n  return input === undefined;\n}\n", "import { isNotNull, isString } from \"./util.ts\";\n\n/*\n * JSW \u00A71: Cryptographic algorithms and identifiers for use with this specification\n * are described in the separate JSON Web Algorithms (JWA) specification:\n * https://www.rfc-editor.org/rfc/rfc7518\n */\nexport type Algorithm =\n  | \"HS256\"\n  | \"HS384\"\n  | \"HS512\"\n  | \"PS256\"\n  | \"PS384\"\n  | \"PS512\"\n  | \"RS256\"\n  | \"RS384\"\n  | \"RS512\"\n  | \"ES256\"\n  | \"ES384\"\n  // P-521 is not yet supported.\n  // https://github.com/denoland/deno/blob/main/ext/crypto/00_crypto.js\n  | \"none\";\n\n// Still needs an 'any' type! Does anyone have an idea?\n// https://github.com/denoland/deno/blob/main/ext/crypto/lib.deno_crypto.d.ts\nfunction isHashedKeyAlgorithm(\n  // deno-lint-ignore no-explicit-any\n  algorithm: Record<string, any>,\n): algorithm is HmacKeyAlgorithm | RsaHashedKeyAlgorithm {\n  return isString(algorithm.hash?.name);\n}\n\nfunction isEcKeyAlgorithm(\n  // deno-lint-ignore no-explicit-any\n  algorithm: Record<string, any>,\n): algorithm is EcKeyAlgorithm {\n  return isString(algorithm.namedCurve);\n}\n\nexport function verify(alg: Algorithm, key: CryptoKey | null): boolean {\n  if (alg === \"none\") {\n    if (isNotNull(key)) {\n      throw new Error(`The alg '${alg}' does not allow a key.`);\n    } else return true;\n  } else {\n    if (!key) throw new Error(`The alg '${alg}' demands a key.`);\n    const keyAlgorithm = key.algorithm;\n    const algAlgorithm = getAlgorithm(alg);\n    if (keyAlgorithm.name === algAlgorithm.name) {\n      if (isHashedKeyAlgorithm(keyAlgorithm)) {\n        return keyAlgorithm.hash.name === algAlgorithm.hash.name;\n      } else if (isEcKeyAlgorithm(keyAlgorithm)) {\n        return keyAlgorithm.namedCurve === algAlgorithm.namedCurve;\n      }\n    }\n    return false;\n  }\n}\n\nexport function getAlgorithm(alg: Algorithm) {\n  switch (alg) {\n    case \"HS256\":\n      return { hash: { name: \"SHA-256\" }, name: \"HMAC\" };\n    case \"HS384\":\n      return { hash: { name: \"SHA-384\" }, name: \"HMAC\" };\n    case \"HS512\":\n      return { hash: { name: \"SHA-512\" }, name: \"HMAC\" };\n    case \"PS256\":\n      return {\n        hash: { name: \"SHA-256\" },\n        name: \"RSA-PSS\",\n        saltLength: 256 >> 3,\n      };\n    case \"PS384\":\n      return {\n        hash: { name: \"SHA-384\" },\n        name: \"RSA-PSS\",\n        saltLength: 384 >> 3,\n      };\n    case \"PS512\":\n      return {\n        hash: { name: \"SHA-512\" },\n        name: \"RSA-PSS\",\n        saltLength: 512 >> 3,\n      };\n    case \"RS256\":\n      return { hash: { name: \"SHA-256\" }, name: \"RSASSA-PKCS1-v1_5\" };\n    case \"RS384\":\n      return { hash: { name: \"SHA-384\" }, name: \"RSASSA-PKCS1-v1_5\" };\n    case \"RS512\":\n      return { hash: { name: \"SHA-512\" }, name: \"RSASSA-PKCS1-v1_5\" };\n    case \"ES256\":\n      return { hash: { name: \"SHA-256\" }, name: \"ECDSA\", namedCurve: \"P-256\" };\n    case \"ES384\":\n      return { hash: { name: \"SHA-384\" }, name: \"ECDSA\", namedCurve: \"P-384\" };\n    // case \"ES512\":\n    // return { hash: { name: \"SHA-512\" }, name: \"ECDSA\", namedCurve: \"P-521\" };\n    default:\n      throw new Error(`The jwt's alg '${alg}' is not supported.`);\n  }\n}\n", "import { getAlgorithm } from \"./algorithm.ts\";\nimport { base64url } from \"./deps.ts\";\nimport { encoder, isNull } from \"./util.ts\";\n\nimport type { Algorithm } from \"./algorithm.ts\";\n\nexport async function verify(\n  signature: Uint8Array,\n  key: CryptoKey | null,\n  alg: Algorithm,\n  signingInput: string,\n): Promise<boolean> {\n  return isNull(key) ? signature.length === 0 : await crypto.subtle.verify(\n    getAlgorithm(alg),\n    key,\n    signature,\n    encoder.encode(signingInput),\n  );\n}\n\nexport async function create(\n  alg: Algorithm,\n  key: CryptoKey | null,\n  signingInput: string,\n): Promise<string> {\n  return isNull(key) ? \"\" : base64url.encode(\n    new Uint8Array(\n      await crypto.subtle.sign(\n        getAlgorithm(alg),\n        key,\n        encoder.encode(signingInput),\n      ),\n    ),\n  );\n}\n", "import { base64url } from \"./deps.ts\";\nimport {\n  create as createSignature,\n  verify as verifySignature,\n} from \"./signature.ts\";\nimport { Algorithm, verify as verifyAlgorithm } from \"./algorithm.ts\";\nimport {\n  decoder,\n  encoder,\n  isArray,\n  isDefined,\n  isNotNumber,\n  isNotString,\n  isNumber,\n  isObject,\n  isString,\n  isUndefined,\n} from \"./util.ts\";\n\n/**\n * JWT \u00A71: JWTs encode claims to be transmitted as a JSON [RFC7159] object [...].\n * JWT \u00A74.1: The following Claim Names are registered in the IANA\n * \"JSON Web Token Claims\" registry established by Section 10.1. None of the\n * claims defined below are intended to be mandatory to use or implement in all\n * cases, but rather they provide a starting point for a set of useful,\n * interoperable claims.\n * Applications using JWTs should define which specific claims they use and when\n * they are required or optional.\n */\nexport interface Payload {\n  iss?: string;\n  sub?: string;\n  aud?: string[] | string;\n  exp?: number;\n  nbf?: number;\n  iat?: number;\n  jti?: string;\n  [key: string]: unknown;\n}\n\n/**\n * JWS \u00A74.1.1: The \"alg\" value is a case-sensitive ASCII string containing a\n * StringOrURI value. This Header Parameter MUST be present and MUST be\n * understood and processed by implementations.\n */\nexport interface Header {\n  alg: Algorithm;\n  [key: string]: unknown;\n}\n\n/**\n * With `expLeeway` and `nbfLeeway` implementers may provide for some small\n * leeway to account for clock skew (JWT \u00A74.1.4). The default is 1 second.\n * By passing the option `audience`, this application tries to identify the\n * recipient with a value in the `aud` claim. If the values don't match, an\n * `Error` is thrown.\n */\nexport type VerifyOptions = {\n  expLeeway?: number;\n  nbfLeeway?: number;\n  audience?: string | string[] | RegExp;\n};\n\nfunction isExpired(exp: number, leeway: number): boolean {\n  return exp + leeway < Date.now() / 1000;\n}\n\nfunction isTooEarly(nbf: number, leeway: number): boolean {\n  return nbf - leeway > Date.now() / 1000;\n}\n\nfunction is3Tuple(arr: unknown[]): arr is [unknown, unknown, Uint8Array] {\n  return arr.length === 3;\n}\n\nfunction hasInvalidTimingClaims(...claimValues: unknown[]): boolean {\n  return claimValues.some((claimValue) =>\n    isDefined(claimValue) && isNotNumber(claimValue)\n  );\n}\n\nfunction validateTimingClaims(\n  payload: Payload,\n  { expLeeway = 1, nbfLeeway = 1 }: VerifyOptions = {},\n): void {\n  if (hasInvalidTimingClaims(payload.exp, payload.nbf)) {\n    throw new Error(`The jwt has an invalid 'exp' or 'nbf' claim.`);\n  }\n\n  if (isNumber(payload.exp) && isExpired(payload.exp, expLeeway)) {\n    throw RangeError(\"The jwt is expired.\");\n  }\n\n  if (isNumber(payload.nbf) && isTooEarly(payload.nbf, nbfLeeway)) {\n    throw RangeError(\"The jwt is used too early.\");\n  }\n}\n\nfunction hasValidAudClaim(claimValue: unknown): claimValue is Payload[\"aud\"] {\n  if (isUndefined(claimValue) || isString(claimValue)) return true;\n  else return isArray(claimValue) && claimValue.every(isString);\n}\n\nfunction validateAudClaim(\n  aud: unknown,\n  audience: Required<VerifyOptions>[\"audience\"],\n): void {\n  if (hasValidAudClaim(aud)) {\n    if (isUndefined(aud)) {\n      throw new Error(\"The jwt has no 'aud' claim.\");\n    }\n    const audArray = isString(aud) ? [aud] : aud;\n    const audienceArrayOrRegex = isString(audience) ? [audience] : audience;\n    if (\n      !audArray.some((audString) =>\n        isArray(audienceArrayOrRegex)\n          ? audienceArrayOrRegex.includes(audString)\n          : audienceArrayOrRegex.test(audString)\n      )\n    ) {\n      throw new Error(\n        \"The identification with the value in the 'aud' claim has failed.\",\n      );\n    }\n  } else {\n    throw new Error(`The jwt has an invalid 'aud' claim.`);\n  }\n}\n\n/**\n * Takes a `jwt` and returns a 3-tuple `[unknown, unknown, Uint8Array]` if the\n * jwt has a valid _serialization_. Otherwise it throws an `Error`. This function\n * does **not** verify the digital signature.\n */\nexport function decode(\n  jwt: string,\n): [header: unknown, payload: unknown, signature: Uint8Array] {\n  try {\n    const arr = jwt\n      .split(\".\")\n      .map(base64url.decode)\n      .map((uint8Array, index) =>\n        index === 0 || index === 1\n          ? JSON.parse(decoder.decode(uint8Array))\n          : uint8Array\n      );\n    if (is3Tuple(arr)) return arr;\n    else throw new Error();\n  } catch {\n    throw Error(\"The serialization of the jwt is invalid.\");\n  }\n}\n\n/** It does **not** verify the digital signature. */\nexport function validate(\n  // deno-lint-ignore no-explicit-any\n  [header, payload, signature]: [any, any, Uint8Array],\n  options?: VerifyOptions,\n): {\n  header: Header;\n  payload: Payload;\n  signature: Uint8Array;\n} {\n  if (isNotString(header?.alg)) {\n    throw new Error(`The jwt's 'alg' header parameter value must be a string.`);\n  }\n\n  /*\n   * JWT \u00A77.2: Verify that the resulting octet sequence is a UTF-8-encoded\n   * representation of a completely valid JSON object conforming to RFC 7159;\n   * let the JWT Claims Set be this JSON object.\n   */\n  if (isObject(payload)) {\n    validateTimingClaims(payload, options);\n    if (isDefined(options?.audience)) {\n      validateAudClaim(payload.aud, options!.audience);\n    }\n\n    return {\n      header,\n      payload,\n      signature,\n    };\n  } else {\n    throw new Error(`The jwt claims set is not a JSON object.`);\n  }\n}\n\n/**\n * Takes jwt, `CryptoKey` and `VerifyOptions` and returns the `Payload` of the\n * jwt if the jwt is valid. Otherwise it throws an `Error`.\n */\nexport async function verify(\n  jwt: string,\n  key: CryptoKey | null,\n  options?: VerifyOptions,\n): Promise<Payload> {\n  const { header, payload, signature } = validate(decode(jwt), options);\n  if (verifyAlgorithm(header.alg, key)) {\n    if (\n      !(await verifySignature(\n        signature,\n        key,\n        header.alg,\n        jwt.slice(0, jwt.lastIndexOf(\".\")),\n      ))\n    ) {\n      throw new Error(\n        \"The jwt's signature does not match the verification signature.\",\n      );\n    }\n\n    return payload;\n  } else {\n    throw new Error(\n      `The jwt's alg '${header.alg}' does not match the key's algorithm.`,\n    );\n  }\n}\n\n/**\n * JWT \u00A73: JWTs represent a set of claims as a JSON object that is encoded in\n * a JWS and/or JWE structure. This JSON object is the JWT Claims Set.\n * JSW \u00A77.1: The JWS Compact Serialization represents digitally signed or MACed\n * content as a compact, URL-safe string. This string is:\n *       BASE64URL(UTF8(JWS Protected Header)) || '.' ||\n *       BASE64URL(JWS Payload) || '.' ||\n *       BASE64URL(JWS Signature)\n */\nfunction createSigningInput(header: Header, payload: Payload): string {\n  return `${base64url.encode(encoder.encode(JSON.stringify(header)))}.${\n    base64url.encode(encoder.encode(JSON.stringify(payload)))\n  }`;\n}\n\n/**\n * Takes `Header`, `Payload` and `CryptoKey` and returns the url-safe encoded\n * jwt.\n */\nexport async function create(\n  header: Header,\n  payload: Payload,\n  key: CryptoKey | null,\n): Promise<string> {\n  if (verifyAlgorithm(header.alg, key)) {\n    const signingInput = createSigningInput(header, payload);\n    const signature = await createSignature(header.alg, key, signingInput);\n\n    return `${signingInput}.${signature}`;\n  } else {\n    throw new Error(\n      `The jwt's alg '${header.alg}' does not match the key's algorithm.`,\n    );\n  }\n}\n\n/**\n * This helper function simplifies setting a `NumericDate`. It takes either a\n * `Date` object or a `number` (in seconds) and returns the `number` of seconds\n * from 1970-01-01T00:00:00Z UTC until the specified UTC date/time.\n */\nexport function getNumericDate(exp: number | Date): number {\n  return Math.round(\n    (exp instanceof Date ? exp.getTime() : Date.now() + exp * 1000) / 1000,\n  );\n}\n", "import \"$sb/lib/fetch.ts\";\nimport { mime } from \"https://deno.land/x/mimetypes@v1.0.0/mod.ts\";\nimport type { HtmlPost, Post } from \"./ghost.ts\";\n\nimport { create, getNumericDate } from \"https://deno.land/x/djwt@v2.8/mod.ts\";\n\nexport type Image = {\n  ref: string;\n  url: string;\n};\n\nconst fromHexString = (hexString: string) =>\n  Uint8Array.from(\n    hexString.match(/.{1,2}/g)!.map((byte) => parseInt(byte, 16)),\n  );\nexport class GhostAdmin {\n  private token?: string;\n\n  constructor(private url: string, private key: string) {}\n\n  async init() {\n    const [id, secret] = this.key.split(\":\");\n\n    const key = await crypto.subtle.importKey(\n      \"raw\",\n      fromHexString(\n        secret,\n      ),\n      { name: \"HMAC\", hash: \"SHA-256\" },\n      true,\n      [\"sign\", \"verify\"],\n    );\n\n    this.token = await create({\n      alg: \"HS256\",\n      kid: id,\n      typ: \"JWT\",\n    }, {\n      exp: getNumericDate(5 * 60),\n      iat: getNumericDate(0),\n      aud: \"/v3/admin/\",\n    }, key);\n  }\n\n  async listPosts(): Promise<Post[]> {\n    const result = await fetch(\n      `${this.url}/ghost/api/v3/admin/posts?include=lexical&order=published_at+DESC`,\n      {\n        headers: {\n          Authorization: `Ghost ${this.token}`,\n        },\n      },\n    );\n\n    return (await result.json()).posts;\n  }\n\n  async uploadImage(filename: string, data: Uint8Array): Promise<any> {\n    const contentType = mime.getType(filename);\n    const blob = new Blob([data], { type: contentType });\n\n    // Create FormData and append the Blob\n    const formData = new FormData();\n    formData.append(\"file\", blob, filename);\n    formData.append(\"ref\", filename);\n\n    // Use fetch to send the request\n    const result = await nativeFetch(\n      `${this.url}/ghost/api/v3/admin/images/upload`,\n      {\n        method: \"POST\",\n        body: formData,\n        headers: {\n          Authorization: `Ghost ${this.token}`,\n        },\n      },\n    );\n\n    return result.json();\n  }\n\n  publishPost(post: Partial<HtmlPost>): Promise<any> {\n    return this.publish(\"posts\", post);\n  }\n\n  publishPage(post: Partial<HtmlPost>): Promise<any> {\n    return this.publish(\"pages\", post);\n  }\n\n  async publish(publishType: \"pages\" | \"posts\", post: Partial<Post>): Promise<any> {\n    console.log(post);\n\n    const requestBody = {\n      [publishType]: [post],\n    };\n    console.log(requestBody);\n\n    const requestBodyString = JSON.stringify(requestBody);\n    console.log(requestBodyString);\n\n    const oldPostQueryR = await fetch(\n      `${this.url}/ghost/api/v3/admin/${publishType}/slug/${post.slug}`,\n      {\n        headers: {\n          Authorization: `Ghost ${this.token}`,\n          \"Content-Type\": \"application/json\",\n        },\n      },\n    );\n    let oldPostQuery = await oldPostQueryR.json();\n    if (!oldPostQuery[publishType]) {\n      // New!\n      if (!post.status) {\n        post.status = \"draft\";\n      }\n      let result = await fetch(`${this.url}/ghost/api/v3/admin/${publishType}/`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Ghost ${this.token}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestBody)\n      });\n      const jsonResponse = await result.json();\n      console.log(jsonResponse);\n      return jsonResponse[publishType][0];\n    } else {\n      let oldPost: Post = oldPostQuery[publishType][0];\n      post.updated_at = oldPost.updated_at;\n      let result = await fetch(\n        `${this.url}/ghost/api/v3/admin/${publishType}/${oldPost.id}/`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Ghost ${this.token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(requestBody)\n        },\n      );\n      const jsonResponse = await result.json();\n      console.log(jsonResponse);\n      return jsonResponse[publishType][0];\n    }\n  }\n}\n", "import { YAML } from \"$sb/plugos-syscall/mod.ts\";\n\nimport {\n  addParentPointers,\n  collectNodesOfType,\n  ParseTree,\n  renderToText,\n  replaceNodesMatchingAsync,\n  traverseTreeAsync,\n} from \"$sb/lib/tree.ts\";\n\nexport type FrontMatter = { tags: string[] } & Record<string, any>;\n\nexport type FrontmatterExtractOptions = {\n  removeKeys?: string[];\n  removeTags?: string[] | true;\n  removeFrontmatterSection?: boolean;\n};\n\n// Extracts front matter from a markdown document\n// optionally removes certain keys from the front matter\nexport async function extractFrontmatter(\n  tree: ParseTree,\n  options: FrontmatterExtractOptions = {},\n): Promise<FrontMatter> {\n  let data: FrontMatter = {\n    tags: [],\n  };\n  addParentPointers(tree);\n  let paragraphCounter = 0;\n\n  await replaceNodesMatchingAsync(tree, async (t) => {\n    // Find tags in the first paragraph to attach to the page\n    if (t.type === \"Paragraph\") {\n      paragraphCounter++;\n      // Only attach hashtags in the first paragraph to the page\n      if (paragraphCounter !== 1) {\n        return;\n      }\n      collectNodesOfType(t, \"Hashtag\").forEach((h) => {\n        const tagname = h.children![0].text!.substring(1);\n        if (!data.tags.includes(tagname)) {\n          data.tags.push(tagname);\n        }\n        if (\n          options.removeTags === true || options.removeTags?.includes(tagname)\n        ) {\n          // Ugly hack to remove the hashtag\n          h.children![0].text = \"\";\n        }\n      });\n    }\n    // Find FrontMatter and parse it\n    if (t.type === \"FrontMatter\") {\n      const yamlNode = t.children![1].children![0];\n      const yamlText = renderToText(yamlNode);\n      try {\n        const parsedData: any = await YAML.parse(yamlText);\n        const newData = { ...parsedData };\n        data = { ...data, ...parsedData };\n        // Make sure we have a tags array\n        if (!data.tags) {\n          data.tags = [];\n        }\n        // Normalize tags to an array and support a \"tag1, tag2\" notation\n        if (typeof data.tags === \"string\") {\n          data.tags = (data.tags as string).split(/,\\s*/);\n        }\n        if (options.removeKeys && options.removeKeys.length > 0) {\n          let removedOne = false;\n\n          for (const key of options.removeKeys) {\n            if (key in newData) {\n              delete newData[key];\n              removedOne = true;\n            }\n          }\n          if (removedOne) {\n            yamlNode.text = await YAML.stringify(newData);\n          }\n        }\n        // If nothing is left, let's just delete this whole block\n        if (\n          Object.keys(newData).length === 0 || options.removeFrontmatterSection\n        ) {\n          return null;\n        }\n      } catch (e: any) {\n        console.warn(\"Could not parse frontmatter\", e.message);\n      }\n    }\n\n    return undefined;\n  });\n\n  if (data.name) {\n    data.displayName = data.name;\n    delete data.name;\n  }\n\n  return data;\n}\n\n// Updates the front matter of a markdown document and returns the text as a rendered string\nexport async function prepareFrontmatterDispatch(\n  tree: ParseTree,\n  data: string | Record<string, any>,\n): Promise<any> {\n  let dispatchData: any = null;\n  await traverseTreeAsync(tree, async (t) => {\n    // Find FrontMatter and parse it\n    if (t.type === \"FrontMatter\") {\n      const bodyNode = t.children![1].children![0];\n      const yamlText = renderToText(bodyNode);\n\n      try {\n        let frontmatterText = \"\";\n        if (typeof data === \"string\") {\n          frontmatterText = yamlText + data + \"\\n\";\n        } else {\n          const parsedYaml = await YAML.parse(yamlText) as any;\n          const newData = { ...parsedYaml, ...data };\n          frontmatterText = await YAML.stringify(newData);\n        }\n        // Patch inline\n        dispatchData = {\n          changes: {\n            from: bodyNode.from,\n            to: bodyNode.to,\n            insert: frontmatterText,\n          },\n        };\n      } catch (e: any) {\n        console.error(\"Error parsing YAML\", e);\n      }\n      return true;\n    }\n    return false;\n  });\n  if (!dispatchData) {\n    // If we didn't find frontmatter, let's add it\n    let frontmatterText = \"\";\n    if (typeof data === \"string\") {\n      frontmatterText = data + \"\\n\";\n    } else {\n      frontmatterText = await YAML.stringify(data);\n    }\n    const fullFrontmatterText = \"---\\n\" + frontmatterText +\n      \"---\\n\";\n    dispatchData = {\n      changes: {\n        from: 0,\n        to: 0,\n        insert: fullFrontmatterText,\n      },\n    };\n  }\n  return dispatchData;\n}\n", "import { readSetting } from \"$sb/lib/settings_page.ts\";\nimport { readSecret } from \"$sb/lib/secrets_page.ts\";\nimport { editor, markdown, space, system } from \"$sb/silverbullet-syscall/mod.ts\";\nimport { renderToText } from \"$sb/lib/tree.ts\";\nimport { cleanMarkdown } from \"$sb-plugs/markdown/util.ts\";\nimport { MarkdownRenderOptions } from \"$sb-plugs/markdown/markdown_render.ts\";\nimport { GhostAdmin } from \"./ghost_api.ts\";\nimport type { PublishEvent } from \"$sb/app_event.ts\";\nimport { filterBox } from \"$sb/silverbullet-syscall/editor.ts\";\nimport {\n  extractFrontmatter,\n  prepareFrontmatterDispatch,\n} from \"$sb/lib/frontmatter.ts\";\nimport { ParseTree } from \"$sb/lib/tree.ts\";\n\ntype GhostInstanceConfig = {\n  url: string;\n  adminKey: string;\n};\n\ntype GhostConfig = Record<string, GhostInstanceConfig>;\n\nexport type HtmlPost = {\n  id: string;\n  uuid: string;\n  title: string;\n  slug: string;\n  html: string;\n  status: \"draft\" | \"published\";\n  visibility: string;\n  created_at: string;\n  published_at: string;\n  updated_at: string;\n  tags: Tag[];\n  primary_tag: Tag;\n  url: string;\n  excerpt: string;\n};\n\nexport type Post = {\n  id: string;\n  uuid: string;\n  title: string;\n  slug: string;\n  lexical: string;\n  status: \"draft\" | \"published\";\n  visibility: string;\n  created_at: string;\n  published_at: string;\n  updated_at: string;\n  tags: Tag[];\n  primary_tag: Tag;\n  url: string;\n  excerpt: string;\n};\n\ntype Tag = {\n  id: string;\n  name: string;\n  slug: string;\n  description: string | null;\n};\n\ntype Card = any[];\n\nasync function markdownToHtml(text: string): Promise<Partial<string>> {\n  /* https://forum.ghost.org/t/struggling-to-update-post-using-admin-api-lexical/45209/13 */\n  /* https://github.com/silverbulletmd/silverbullet/blob/e280dfee4a2c6fd3611ade2a372a7624abae0c0b/plugs/share/share.ts#L112 */\n\n  const mdTree = await markdown.parseMarkdown(text);\n  const options:MarkdownRenderOptions = {};\n\n  const pageName = await editor.getCurrentPage();\n\n  const expanded = await system.invokeFunction(\n    \"markdown.expandCodeWidgets\",\n    mdTree,\n    pageName\n  );\n\n  const html = await system.invokeFunction(\n    \"markdown.markdownToHtml\",\n    renderToText(expanded),\n    options\n  );\n\n  // html = \"<p>this is just a plain old paragraph to test things.</p>\";\n  // html = \"<!--kg-card-begin: html-->\" + html + \"<!--kg-card-end: html-->\";\n\n  return html;\n}\n\nconst postRegex = /#\\s*([^\\n]+)\\n(([^\\n]|\\n)+)$/;\n\nfunction htmlToHtmlCard(htmlString: string): object {\n  const lexical = {\n      root: {\n          children: [\n              {\n                  type: 'html',\n                  version: 1,\n                  html: htmlString\n              }\n          ],\n          direction: null,\n          format: '',\n          indent: 0,\n          type: 'root',\n          version: 1\n      }\n  };\n\n  return lexical;\n};\n\nfunction mdToMdCard(mdString: string): object {\n  const lexical = {\n      root: {\n          children: [\n              {\n                  type: 'markdown',\n                  version: 1,\n                  markdown: mdString\n              }\n          ],\n          direction: null,\n          format: '',\n          indent: 0,\n          type: 'root',\n          version: 1\n      }\n  };\n\n  return lexical;\n};\n\nasync function markdownToPost(text: string): Promise<Partial<Post>> {\n  const match = postRegex.exec(text);\n  if (match) {\n    const [, title, content] = match;\n    // const htmlString = await markdownToHtml(content);\n    return {\n      title,\n      // lexical: JSON.stringify(htmlToHtmlCard(htmlString)),\n      lexical: JSON.stringify(mdToMdCard(content))\n    };\n  }\n  throw Error(\"Post should start with a # header\");\n}\n\nasync function getConfig(): Promise<GhostConfig> {\n  const config = await readSetting(\"ghost\") as GhostConfig;\n  const secret = await readSecret(\"ghost\") as Record<string, string>; // instance to admin key\n  // Slot in secrets with the configs\n  for (const [name, def] of Object.entries(config)) {\n    def.adminKey = secret[name];\n  }\n  return config;\n}\n\nexport async function publish(event: PublishEvent): Promise<boolean> {\n  const config = await getConfig();\n  console.log(event);\n  const [, name, type, slug] = event.uri!.split(\":\");\n  console.log(`name: ${name}`);\n  console.log(`type: ${type}`);\n  console.log(`type: ${slug}`);\n  const instanceConfig = config[name];\n  if (!instanceConfig) {\n    throw new Error(\"No config for instance \" + name);\n  }\n  const admin = new GhostAdmin(instanceConfig.url, instanceConfig.adminKey);\n  await admin.init();\n  const text = await space.readPage(event.name);\n  const post = await markdownToPost(text);\n  post.slug = slug;\n  if (type === \"post\") {\n    await admin.publishPost(post);\n  } else if (type === \"page\") {\n    await admin.publishPage(post);\n  }\n  return true;\n}\n\nasync function selectInstance(): Promise<string | undefined> {\n  const config = await getConfig();\n  const choices = Object.keys(config);\n  const choice = await filterBox(\n    \"Select Ghost instance\",\n    choices.map((c) => ({ name: c })),\n  );\n  if (!choice) {\n    return;\n  }\n  return choice.name;\n}\n\nasync function selectPublishType(): Promise<\"post\" | \"page\" | undefined> {\n  const choice = await filterBox(\"Select publish type\", [\n    { name: \"post\" },\n    { name: \"page\" },\n  ]);\n  if (!choice) {\n    return;\n  }\n  return choice.name as \"post\" | \"page\";\n}\n\nexport async function publishPage() {\n  const currentPage = await editor.getCurrentPage();\n  const text = await editor.getText();\n  const tree = await markdown.parseMarkdown(text);\n\n  const { $share } = await extractFrontmatter(tree);\n\n  if ($share && Array.isArray($share)) {\n    for (const share of $share) {\n      if (share.startsWith(\"ghost:\")) {\n        // We got a ghost share, let's publish it and we're done\n        await publish({\n          name: currentPage,\n          uri: share,\n        });\n        return editor.flashNotification(\"Published to Ghost!\");\n      }\n    }\n  }\n\n  // If we're here, this page has not been shared to Ghost yet\n\n  // Let's select an instance\n  const instanceName = await selectInstance();\n  if (!instanceName) {\n    return;\n  }\n\n  // And a type (post or page)\n  const type = await selectPublishType();\n  if (!type) {\n    return;\n  }\n  const config = await getConfig();\n  const instanceConfig = config[instanceName];\n  if (!instanceConfig) {\n    throw new Error(\"No config for instance \" + instanceName);\n  }\n\n  // And a post/page slug\n  const slug = await editor.prompt(\"Post slug\");\n  if (!slug) {\n    return;\n  }\n  const post = await markdownToPost(text);\n  post.slug = slug;\n\n  // Publish to Ghost\n  const admin = new GhostAdmin(instanceConfig.url, instanceConfig.adminKey);\n  await admin.init();\n  await admin.publishPost(post);\n\n  // Update frontmatter\n  await editor.dispatch(\n    await prepareFrontmatterDispatch(tree, {\n      $share: [`ghost:${instanceName}:${type}:${slug}`],\n    }),\n  );\n\n  await editor.flashNotification(\"Published to Ghost!\");\n}\n\nexport async function uploadImagesAndReplaceLinks(\n  tree: ParseTree,\n  instanceConfig: GhostInstanceConfig,\n) {\n  const admin = new GhostAdmin(instanceConfig.url, instanceConfig.adminKey);\n  await admin.init();\n  const image = await space.readAttachment(\"zefplus/posts/test.png\");\n  console.log(\"Got image\", image.byteLength);\n  console.log(await admin.uploadImage(\"test.png\", image));\n}\n", "\nimport { setupMessageListener } from \"https://deno.land/x/silverbullet@0.7.6/lib/plugos/worker_runtime.ts\";\n\n// Imports\nimport {publishPage as publishPage} from \"file://D:\\\\git-repos\\\\silverbullet-ghost\\\\ghost.ts\";\nimport {publish as publish} from \"file://D:\\\\git-repos\\\\silverbullet-ghost\\\\ghost.ts\";\n\n\n// Function mapping\nconst functionMapping = {\n  publishPage: publishPage,\n  publish: publish,\n\n};\n\n// Manifest\nconst manifest = {\n  \"name\": \"ghost\",\n  \"requiredPermissions\": [\n    \"fetch\"\n  ],\n  \"functions\": {\n    \"publishPage\": {\n      \"path\": \"ghost.ts:publishPage\",\n      \"command\": {\n        \"name\": \"Ghost: Publish\"\n      }\n    },\n    \"publish\": {\n      \"path\": \"ghost.ts:publish\",\n      \"events\": [\n        \"share:ghost\"\n      ]\n    }\n  },\n  \"assets\": {}\n};\n\nexport const plug = {manifest, functionMapping};\n\nsetupMessageListener(functionMapping, manifest);\n"],
  "mappings": "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",
  "names": ["functionMapping", "manifest", "syscall", "syscall", "syscall", "syscall", "syscall", "syscall", "ext", "decode", "encode", "encode", "decode", "create", "create"]
}
